[
  {
    "objectID": "traineeship/index.html",
    "href": "traineeship/index.html",
    "title": "Стажировка",
    "section": "",
    "text": "Аннотация учебного модуля\nОтчет по стажировке",
    "crumbs": [
      "Главная",
      "Стажировка"
    ]
  },
  {
    "objectID": "traineeship/index.html#содержание-учебного-модуля",
    "href": "traineeship/index.html#содержание-учебного-модуля",
    "title": "Стажировка",
    "section": "",
    "text": "Аннотация учебного модуля\nОтчет по стажировке",
    "crumbs": [
      "Главная",
      "Стажировка"
    ]
  },
  {
    "objectID": "traineeship/annotation.html",
    "href": "traineeship/annotation.html",
    "title": "Аннотация учебной дисциплины",
    "section": "",
    "text": "закрепить знания и навыки, полученные в ходе обучения, а также выработать новые с учетом изучения реальной ситуации в компании и взаимодействия с работниками разного уровня:",
    "crumbs": [
      "Главная",
      "Стажировка",
      "Аннотация"
    ]
  },
  {
    "objectID": "traineeship/annotation.html#цель-прохождения-стажировки",
    "href": "traineeship/annotation.html#цель-прохождения-стажировки",
    "title": "Аннотация учебной дисциплины",
    "section": "",
    "text": "закрепить знания и навыки, полученные в ходе обучения, а также выработать новые с учетом изучения реальной ситуации в компании и взаимодействия с работниками разного уровня:",
    "crumbs": [
      "Главная",
      "Стажировка",
      "Аннотация"
    ]
  },
  {
    "objectID": "traineeship/annotation.html#этапы-выполнения-стажировки",
    "href": "traineeship/annotation.html#этапы-выполнения-стажировки",
    "title": "Аннотация учебной дисциплины",
    "section": "Этапы выполнения стажировки:",
    "text": "Этапы выполнения стажировки:\nПроцесс прохождения стажировки включает в себя следующие этапы:\n\nФормирование команд. Назначение руководителя и выбор компании для подготовки проекта.\nПолучение задания на стажировку.\nПрохождение стажировки.\nСоставление отчета о прохождении стажировки и выполнении задания руководителя.\nЗащита отчета о прохождении стажировки.",
    "crumbs": [
      "Главная",
      "Стажировка",
      "Аннотация"
    ]
  },
  {
    "objectID": "software-development-methodology/index.html",
    "href": "software-development-methodology/index.html",
    "title": "Методологии разработки программного обеспечения",
    "section": "",
    "text": "Аннотация учебной дисциплины \nТема 1. Понятие о методологиях разработки. Отдельные виды разработки.\nТема 2. Выбор методологии для реального проекта.\nТема 3. Основы программирования: виды и типы языков программирования; виды и типы программ; цели и задачи создания ПО.\nТема 4. Понятие «функциональных требований» и «технического задания». Требования к написанию ФТ и ТЗ.\nТемы для подготовки к зачету\nТесты для подготовки к ассесменту",
    "crumbs": [
      "Главная",
      "Методологии разработки программного обеспечения"
    ]
  },
  {
    "objectID": "software-development-methodology/index.html#содержание-учебного-модуля",
    "href": "software-development-methodology/index.html#содержание-учебного-модуля",
    "title": "Методологии разработки программного обеспечения",
    "section": "",
    "text": "Аннотация учебной дисциплины \nТема 1. Понятие о методологиях разработки. Отдельные виды разработки.\nТема 2. Выбор методологии для реального проекта.\nТема 3. Основы программирования: виды и типы языков программирования; виды и типы программ; цели и задачи создания ПО.\nТема 4. Понятие «функциональных требований» и «технического задания». Требования к написанию ФТ и ТЗ.\nТемы для подготовки к зачету\nТесты для подготовки к ассесменту",
    "crumbs": [
      "Главная",
      "Методологии разработки программного обеспечения"
    ]
  },
  {
    "objectID": "project/theme-options.html",
    "href": "project/theme-options.html",
    "title": "Примерные темы итоговых проектов",
    "section": "",
    "text": "Тему можно выбрать из списка или предложить свою.\nВ названии темы обязательно должны присутствовать слова:\n\n«разработка системы», или «автоматизация процесса», или «разработка программного модуля», или «разработка сайта», «разработка программного модуля (название чат-бота)» (если разрабатывается чат-бот);\nназвание процесса, который автоматизируется;\nназвание организации, процесс которой автоматизируется (название организации может быть гипотетическое, например, банк, юридическая компания, юридический отдел, ВУЗ, нотариальная контора, районный суд и др.)",
    "crumbs": [
      "Главная",
      "Итоговый проект",
      "Темы проектов"
    ]
  },
  {
    "objectID": "project/theme-options.html#примечание",
    "href": "project/theme-options.html#примечание",
    "title": "Примерные темы итоговых проектов",
    "section": "",
    "text": "Тему можно выбрать из списка или предложить свою.\nВ названии темы обязательно должны присутствовать слова:\n\n«разработка системы», или «автоматизация процесса», или «разработка программного модуля», или «разработка сайта», «разработка программного модуля (название чат-бота)» (если разрабатывается чат-бот);\nназвание процесса, который автоматизируется;\nназвание организации, процесс которой автоматизируется (название организации может быть гипотетическое, например, банк, юридическая компания, юридический отдел, ВУЗ, нотариальная контора, районный суд и др.)",
    "crumbs": [
      "Главная",
      "Итоговый проект",
      "Темы проектов"
    ]
  },
  {
    "objectID": "project/theme-options.html#примерные-темы-итоговых-проектов",
    "href": "project/theme-options.html#примерные-темы-итоговых-проектов",
    "title": "Примерные темы итоговых проектов",
    "section": "Примерные темы итоговых проектов",
    "text": "Примерные темы итоговых проектов\n\nРазработка системы электронного документооборота в юридической компании ________ (название).\nАвтоматизация процесса подготовки правовых заключений в ________ (название организации).\nРазработка программного модуля «название чат-бота» юридической поддержки клиентов компании ________ (название).\nАвтоматизация процесса мониторинга законодательства в _________ (название организации).\nАвтоматизация процесса выдачи разрешительной документации (например, справка на ношение оружия, получение российского паспорта и др.) в ____________ (название организации).\nАвтоматизация процесса мониторинга и проверки контрагентов на благонадежность в юридической компании ___________ (название).\nАвтоматизация процесса мониторинга и анализа конкурентов (в т.ч., в рамках участия в госзакупках) в ___________ (название организации).\nАвтоматизация процесса ведения дел в районном суде.\nАвтоматизация процесса делопроизводства в суде общей юрисдикции.\nРазработка программного модуля анализа судебной практики для ____________ (название организации).\nРазработка программного модуля управления юридическими рисками в ___________ (название организации).\nАвтоматизация контроля учета рабочего времени сотрудников в _____________ (название организации).\nАвтоматизация процесса договорной работы в ___________ (название организации).\nАвтоматизация судебной работы секретаря судебного заседания в суде общей юрисдикции.\nАвтоматизация деятельности адвокатской конторы.\nАвтоматизация процесса оказания юридической поддержки клиентам адвокатской конторы.\nРазработка программного модуля заключения договоров в __________ (название организации) с применением технологии искусственного интеллекта.\nАвтоматизация процесса регистрации права собственности на объекты недвижимости в ______________ (название организации).\nРазработка программного модуля «Конструктор договоров» с использованием сервиса Manybot.\nРазработка программного модуля «название» определения подсудности по спорам гражданско-правового характера.\nРазработка программного модуля «название» деятельности приемной комиссии ВУЗа.\nАвтоматизация кадрового документооборота в «название организации» с использованием шаблонов документов.\nРазработка программного модуля «Юрист-бот» юридической поддержки клиентов в «название организации».\nРазработка программного модуля «Юридическая клиника» on-line консультирования граждан в ВУЗе.\nРазработка программного модуля «Выявление перспективных технологических направлений» интеллектуальной системы поддержки принятия решений в ВУЗе.\nАвтоматизация процесса поиска судебных актов судов общей юрисдикции в «название организации».",
    "crumbs": [
      "Главная",
      "Итоговый проект",
      "Темы проектов"
    ]
  },
  {
    "objectID": "project/report-requirements.html",
    "href": "project/report-requirements.html",
    "title": "Требования к отчету по проекту",
    "section": "",
    "text": "Отчет по проекту должен включать:\n\nтитульный лист;\nаннотация на русском и иностранном языках (Приложение 4);\nсодержание;\nвведение;\nосновную часть, состоящую пяти разделов;\nзаключение, включающее выводы и предложения (рекомендации);\nсписок используемых источников;\nприложения (при необходимости).\n\nПроект выполняется по актуальной для получаемого направления теме. Актуальность темы и основные цели работы аргументируются во введении. Отчет по проекту должен быть выполнен автором (авторами) самостоятельно со ссылками на используемую литературу и другие источники.\nРезультатом выполнения работы является достижение целей и задач, сформулированных во введении. Содержание работы и уровень ее исполнения должны удовлетворять современным требованиям по присваиваемой квалификации.",
    "crumbs": [
      "Главная",
      "Итоговый проект",
      "Требования к отчету"
    ]
  },
  {
    "objectID": "project/report-requirements.html#требования-к-содержанию",
    "href": "project/report-requirements.html#требования-к-содержанию",
    "title": "Требования к отчету по проекту",
    "section": "",
    "text": "Отчет по проекту должен включать:\n\nтитульный лист;\nаннотация на русском и иностранном языках (Приложение 4);\nсодержание;\nвведение;\nосновную часть, состоящую пяти разделов;\nзаключение, включающее выводы и предложения (рекомендации);\nсписок используемых источников;\nприложения (при необходимости).\n\nПроект выполняется по актуальной для получаемого направления теме. Актуальность темы и основные цели работы аргументируются во введении. Отчет по проекту должен быть выполнен автором (авторами) самостоятельно со ссылками на используемую литературу и другие источники.\nРезультатом выполнения работы является достижение целей и задач, сформулированных во введении. Содержание работы и уровень ее исполнения должны удовлетворять современным требованиям по присваиваемой квалификации.",
    "crumbs": [
      "Главная",
      "Итоговый проект",
      "Требования к отчету"
    ]
  },
  {
    "objectID": "project/report-requirements.html#требования-к-структуре",
    "href": "project/report-requirements.html#требования-к-структуре",
    "title": "Требования к отчету по проекту",
    "section": "Требования к структуре",
    "text": "Требования к структуре\nВ структуре отчета выделяются:\n\nтитульный лист;\nоглавление;\nвведение;\nосновная часть;\nзаключение;\nсписок используемой литературы;\nприложения.\n\nВо введении должны содержаться:\n\nаргументация актуальности темы проекта (например, автоматизация рутинного юридического процесса, внедрение новой технологии обработки юридической документации, автоматизация сквозного бизнес-процесса в юридической компании/подразделении и др.);\nцель проекта (цель должна быть сформулирована по SMART и связана с автоматизацией какого-либо юридического процесса (процессов). Проект может быть связан:\n\nс разработкой собственного продукта (программы, программного модуля, информационной системы) «с нуля», в том числе с использованием имеющихся на рынке low/no-code систем (например, разработка конструкторов, генераторов юридических документов, калькуляторов, чат-ботов с использованием конструкторов Botman.one/TurboContract и др.) и с интеграцией с существующими в организации информационными системами;\nс внедрением в подразделении/компании существующего на рынке готового коробочного решения (информационной системы) без доработки;\nс внедрением имеющегося на рынке готового IT-решения с доработкой и интеграцией с существующими в организации информационными системами.\n\nзадачи проекта, т.е. шаги на пути достижения цели. При формулировании задач необходимо применять глаголы совершенного вида (например, подготовить, выполнить, обосновать, сформировать, построить, разработать и др.). Например,\n\nвыполнить описание организации, являющейся объектом автоматизации, и ее организационной структуры;\nвыполнить анализ существующей организации бизнес и информационных процессов;\nсформировать предложения по автоматизации (информатизации) бизнес-процессов с учетом анализа рынка программного обеспечения и IТ-технологий, выбора технологии проектирования ИС;\nпостроить и обосновать модель новой организации бизнес-процессов;\nразработать спецификацию функциональных требований к информационной системе;\nвыполнить календарно-ресурсное планирование проекта, определить риски и описать меры, предпринимаемые для противодействия рискам.\n\nпрактическая значимость проекта (например, полученные результаты могут быть использованы для автоматизации юридических процессов в аналогичных компаниях).\n\nОбъем введения не более 5 страниц.\nВ структуре основной части отчета должны быть выделены разделы (1,2,3,4,5), и в их составе –– подразделы (1.1, 1.2, 1.3…, 2.1, 2.2 и т. п.). Названия разделов и подразделов должны быть сформулированы, по возможности, кратко и отражать их содержание. Названия подразделов не должны повторять названия разделов.",
    "crumbs": [
      "Главная",
      "Итоговый проект",
      "Требования к отчету"
    ]
  },
  {
    "objectID": "project/report-requirements.html#требования-к-объему",
    "href": "project/report-requirements.html#требования-к-объему",
    "title": "Требования к отчету по проекту",
    "section": "Требования к объему",
    "text": "Требования к объему\nТребуемый объем отчета 30-50 страниц (минимум 30 страниц без приложений) машинописного текста, включая таблицы, графический и табличный материал. Приложения не входят в требуемый объем работы. Объем приложения не ограничен. Количество источников литературы –– не менее 20.\nУникальность выпускной квалификационной работы должна быть не менее 65%.",
    "crumbs": [
      "Главная",
      "Итоговый проект",
      "Требования к отчету"
    ]
  },
  {
    "objectID": "project/report-requirements.html#требования-к-оформлению",
    "href": "project/report-requirements.html#требования-к-оформлению",
    "title": "Требования к отчету по проекту",
    "section": "Требования к оформлению",
    "text": "Требования к оформлению\nРабота выполняется на листах формата А4 (210х297 мм), пронумерованных и сброшюрованных. Отчет по проекту печатается на листах бумаги стандартного формата А4 на одной стороне листа.\nВсе страницы отчета обязательно должны быть пронумерованы. Нумерация листов –– сквозная, через всю работу. Приложения должны иметь общую с остальной частью документа сквозную нумерацию страниц. Для нумерации используются арабские цифры (1, 2, 3, …). Порядковый номер страницы печатают на середине верхнего поля страницы. Титульный лист и листы с оглавлением не нумеруются, но обязательно учитываются при подсчете количества страниц отчета. Номера страниц должны быть видны, начиная с введения и заканчивая последним листом отчета.\nНазвание каждого раздела/подраздела должно иметь более крупный шрифт, чем остальной текст или иметь полужирное начертание. Заголовки разделов/подразделов отчета следует располагать в середине строки без точки в конце. Если заголовки содержат несколько предложений, их разделяют точками. В названии разделов допускается, чтобы все буквы были прописными.\nКаждый раздел отчета (введение, разделы основной части, заключение) следует начинать с новой страницы. Название раздела отделяют от текста и от названия подраздела двойным между абзацным интервалом (18пт).\nКаждый подраздел не должен начинаться с новой страницы, но продолжаться. Название подраздела также отделяют от текста сверху и снизу двойным между абзацными интервалами (18пт).\nВсе таблицы и рисунки должны быть последовательно пронумерованы. Нумерация сквозная. Для нумерации используются арабские цифры (1, 2, …).\nРабота должна быть выполнена на ПК через 1,5 интервала шрифтом Times New Roman, размер шрифта – 14 пт.\nПоля: верхнее и нижнее – 25 мм, левое – 30 мм, правое – 10 мм.",
    "crumbs": [
      "Главная",
      "Итоговый проект",
      "Требования к отчету"
    ]
  },
  {
    "objectID": "project/annotation.html",
    "href": "project/annotation.html",
    "title": "Аннотация учебной дисциплины",
    "section": "",
    "text": "определить, насколько систематизированы, закреплены и расширены практические умения слушателя программы профессиональной переподготовки;\nпоказать умение самостоятельно разрабатывать конкретную проблему в области права, систематизировать и обобщать информацию на английском языке;\nсвидетельствовать об умении излагать свои мысли, аргументировать выдвинутые гипотезы и предложения, правильно пользоваться профессиональной терминологией;\nуглубить навыки исследовательской и аналитической работы.",
    "crumbs": [
      "Главная",
      "Итоговый проект",
      "Аннотация"
    ]
  },
  {
    "objectID": "project/annotation.html#цель-выполнения-итогового-проекта",
    "href": "project/annotation.html#цель-выполнения-итогового-проекта",
    "title": "Аннотация учебной дисциплины",
    "section": "",
    "text": "определить, насколько систематизированы, закреплены и расширены практические умения слушателя программы профессиональной переподготовки;\nпоказать умение самостоятельно разрабатывать конкретную проблему в области права, систематизировать и обобщать информацию на английском языке;\nсвидетельствовать об умении излагать свои мысли, аргументировать выдвинутые гипотезы и предложения, правильно пользоваться профессиональной терминологией;\nуглубить навыки исследовательской и аналитической работы.",
    "crumbs": [
      "Главная",
      "Итоговый проект",
      "Аннотация"
    ]
  },
  {
    "objectID": "project/annotation.html#этапы-выполнения-итогового-проекта",
    "href": "project/annotation.html#этапы-выполнения-итогового-проекта",
    "title": "Аннотация учебной дисциплины",
    "section": "Этапы выполнения итогового проекта:",
    "text": "Этапы выполнения итогового проекта:\nПроцесс выполнения итогового проекта включает в себя следующие этапы:\n\nФормирование команд. Назначение руководителя и выбор компании для подготовки проекта.\nПодбор и изучение законодательных, нормативных и научных источников литературы по рассматриваемой проблеме.\nИзучение проблемы с применением полученных знаний в ходе стажировки.\nПодготовка проекта, включающего в себя описание функциональных требований.\nПредоставление работы руководителю для проверки.\nОкончательное редактирование работы с учетом замечаний руководителя.\nЗащита проекта в ходе итоговой аттестации.",
    "crumbs": [
      "Главная",
      "Итоговый проект",
      "Аннотация"
    ]
  },
  {
    "objectID": "legaltech/credit.html",
    "href": "legaltech/credit.html",
    "title": "Зачет",
    "section": "",
    "text": "Для успешной сдачи зачета слушателю необходимо подготовить краткую устную презентацию, отражающую конкретный юридический процесс и программные средства его автоматизации.",
    "crumbs": [
      "Главная",
      "Автоматизация юридической работы (Legaltech)",
      "Зачет"
    ]
  },
  {
    "objectID": "legaltech/credit.html#темы-для-подготовки-к-зачету",
    "href": "legaltech/credit.html#темы-для-подготовки-к-зачету",
    "title": "Зачет",
    "section": "",
    "text": "Для успешной сдачи зачета слушателю необходимо подготовить краткую устную презентацию, отражающую конкретный юридический процесс и программные средства его автоматизации.",
    "crumbs": [
      "Главная",
      "Автоматизация юридической работы (Legaltech)",
      "Зачет"
    ]
  },
  {
    "objectID": "legaltech/annotation.html",
    "href": "legaltech/annotation.html",
    "title": "Аннотация учебной дисциплины",
    "section": "",
    "text": "формирование у обучающихся представлений о современном состоянии и развитии рынка Legaltech для комплексного понимания вариантов оптимизации и автоматизации юридической работы.",
    "crumbs": [
      "Главная",
      "Автоматизация юридической работы (Legaltech)",
      "Аннотация"
    ]
  },
  {
    "objectID": "legaltech/annotation.html#цель-реализации-программы-дисциплины",
    "href": "legaltech/annotation.html#цель-реализации-программы-дисциплины",
    "title": "Аннотация учебной дисциплины",
    "section": "",
    "text": "формирование у обучающихся представлений о современном состоянии и развитии рынка Legaltech для комплексного понимания вариантов оптимизации и автоматизации юридической работы.",
    "crumbs": [
      "Главная",
      "Автоматизация юридической работы (Legaltech)",
      "Аннотация"
    ]
  },
  {
    "objectID": "legaltech/annotation.html#планируемые-результаты-обучения",
    "href": "legaltech/annotation.html#планируемые-результаты-обучения",
    "title": "Аннотация учебной дисциплины",
    "section": "Планируемые результаты обучения:",
    "text": "Планируемые результаты обучения:\nПо итогам освоения дисциплины (модуля) обучающийся приобретает способности:\n\nанализировать рынок программного обеспечения в сфере автоматизации юридических процессов;\nпонимать новизну предлагаемых и/или внедряемых решений;\nоценивать эффективность создания нового ПО в сфере автоматизации юридических процессов;\nоценивать, подходит ли имеющееся на рынке ПО для задач, стоящих перед специалистом по автоматизации;\nпредлагать внедрение и/или совершенствование ПО для автоматизации юридических процессов.",
    "crumbs": [
      "Главная",
      "Автоматизация юридической работы (Legaltech)",
      "Аннотация"
    ]
  },
  {
    "objectID": "legaltech/annotation.html#оценка-качества-освоения-дисциплины",
    "href": "legaltech/annotation.html#оценка-качества-освоения-дисциплины",
    "title": "Аннотация учебной дисциплины",
    "section": "Оценка качества освоения дисциплины",
    "text": "Оценка качества освоения дисциплины\nОценка качества освоения программы по дисциплине «Автоматизация юридической работы (Legaltech)» подразумевает одну форму: промежуточный контроль успеваемости.\nПромежуточный контроль успеваемости по дисциплине проводится на зачете.\nДля успешной сдачи зачета слушателю необходимо подготовить краткую устную презентацию, отражающую конкретный юридический процесс и программные средства его автоматизации.",
    "crumbs": [
      "Главная",
      "Автоматизация юридической работы (Legaltech)",
      "Аннотация"
    ]
  },
  {
    "objectID": "it-project-management/credit.html",
    "href": "it-project-management/credit.html",
    "title": "Зачет",
    "section": "",
    "text": "Цели и задачи управления бизнес-процессами\nОпределение бизнес-процесса\nПонятие кросс-функционального и «сквозного» бизнес-процесса\nГоризонтальное взаимодействие функциональных подразделений\nBPM CBOK Version 3.0\nРеферентные модели бизнес-процессов: eTOM, APQC PCF, BIAN\nФорматы описания бизнес-процессов: текстовый, табличный, графической\nНотации моделирования бизнес-процессов (BPMN, EPC, SIPOC и другие)\nМоделирование бизнес-процессов в нотации BPMN\nСредства моделирования бизнес-процессов\nПонятие систем Business Process Management Suite. Примеры автоматизации бизнес-процессов с использованием BPMS систем\nТренды автоматизации бизнес-процессов системы ACM (adaptive case management) и RPA (robotic process automation)\nАнализ времени выполнения бизнес-процессов\nАнализ «бутылочного горлышка» /узких мест\nИмитационное моделирование\nПоказатели анализа бизнес-процессов\nМетоды оптимизации бизнес-процессов: вариативность бизнес-процесса, горизонтальное и вертикальное сжатие бизнес-процессов\nТехнология оптимизации бизнес-процессов\nИнновации при оптимизации бизнес-процессов (нейронные сети, цифровизация и роботизация)\nОсновные понятий проектного менеджмента, «проект», «управление проектом». Сравнение понятий «проект», «программа», «портфель проектов».\nОбщая характеристика проекта как объекта управления.\nСубъекты управления проектом. Внешние и внутренние участники управления проектом. Отношения между понятиями управления проектами.\nСистема стандартов по управлению ИT-проектами, программами и портфелями проектов.\nЦели, задачи и принципы внедрения управления проектами в ИT-cфере.\nПеречислите основные ограничения ИТ-проекта.\nПеречислите виды ресурсов ИТ – проекта.\nМенеджер проекта: компетенции и задачи при управлении заинтересованными сторонами.\nОрганизационная структура при проектном управлении.\nКоманда проекта и команда управления проектом.\nПриведите определения жизненного цикла системы, проекта, программных средств.\nПеречислите и охарактеризуйте процессы реализации ИТ-проекта.\nСоотнесите области действия и порядок использования стандартов ИСО/МЭК 15288 и ИСО/МЭК 12207 для управления ИТ-проектами.\nПланирование и управление проектом.\nТипы задач проекта и типы связей между ними.\nПланирование и управление ресурсами проекта.\nВиды представления информации о проекте. Виды отчетов проекта.\nНазначение диаграммы Ганта.",
    "crumbs": [
      "Главная",
      "Управление ИТ-проектами",
      "Зачет"
    ]
  },
  {
    "objectID": "it-project-management/credit.html#темы-для-подготовки-к-зачету",
    "href": "it-project-management/credit.html#темы-для-подготовки-к-зачету",
    "title": "Зачет",
    "section": "",
    "text": "Цели и задачи управления бизнес-процессами\nОпределение бизнес-процесса\nПонятие кросс-функционального и «сквозного» бизнес-процесса\nГоризонтальное взаимодействие функциональных подразделений\nBPM CBOK Version 3.0\nРеферентные модели бизнес-процессов: eTOM, APQC PCF, BIAN\nФорматы описания бизнес-процессов: текстовый, табличный, графической\nНотации моделирования бизнес-процессов (BPMN, EPC, SIPOC и другие)\nМоделирование бизнес-процессов в нотации BPMN\nСредства моделирования бизнес-процессов\nПонятие систем Business Process Management Suite. Примеры автоматизации бизнес-процессов с использованием BPMS систем\nТренды автоматизации бизнес-процессов системы ACM (adaptive case management) и RPA (robotic process automation)\nАнализ времени выполнения бизнес-процессов\nАнализ «бутылочного горлышка» /узких мест\nИмитационное моделирование\nПоказатели анализа бизнес-процессов\nМетоды оптимизации бизнес-процессов: вариативность бизнес-процесса, горизонтальное и вертикальное сжатие бизнес-процессов\nТехнология оптимизации бизнес-процессов\nИнновации при оптимизации бизнес-процессов (нейронные сети, цифровизация и роботизация)\nОсновные понятий проектного менеджмента, «проект», «управление проектом». Сравнение понятий «проект», «программа», «портфель проектов».\nОбщая характеристика проекта как объекта управления.\nСубъекты управления проектом. Внешние и внутренние участники управления проектом. Отношения между понятиями управления проектами.\nСистема стандартов по управлению ИT-проектами, программами и портфелями проектов.\nЦели, задачи и принципы внедрения управления проектами в ИT-cфере.\nПеречислите основные ограничения ИТ-проекта.\nПеречислите виды ресурсов ИТ – проекта.\nМенеджер проекта: компетенции и задачи при управлении заинтересованными сторонами.\nОрганизационная структура при проектном управлении.\nКоманда проекта и команда управления проектом.\nПриведите определения жизненного цикла системы, проекта, программных средств.\nПеречислите и охарактеризуйте процессы реализации ИТ-проекта.\nСоотнесите области действия и порядок использования стандартов ИСО/МЭК 15288 и ИСО/МЭК 12207 для управления ИТ-проектами.\nПланирование и управление проектом.\nТипы задач проекта и типы связей между ними.\nПланирование и управление ресурсами проекта.\nВиды представления информации о проекте. Виды отчетов проекта.\nНазначение диаграммы Ганта.",
    "crumbs": [
      "Главная",
      "Управление ИТ-проектами",
      "Зачет"
    ]
  },
  {
    "objectID": "it-project-management/annotation.html",
    "href": "it-project-management/annotation.html",
    "title": "Аннотация учебной дисциплины",
    "section": "",
    "text": "получение новых компетенций в области управления проектами в ИT-сфере, системного представления о современной методологии управления ИT-проектами, комплексного подхода к процессам проектного управления на основе нормативного, методического и технологического обеспечения.",
    "crumbs": [
      "Главная",
      "Управление ИТ-проектами",
      "Аннотация"
    ]
  },
  {
    "objectID": "it-project-management/annotation.html#цель-реализации-программы-дисциплины",
    "href": "it-project-management/annotation.html#цель-реализации-программы-дисциплины",
    "title": "Аннотация учебной дисциплины",
    "section": "",
    "text": "получение новых компетенций в области управления проектами в ИT-сфере, системного представления о современной методологии управления ИT-проектами, комплексного подхода к процессам проектного управления на основе нормативного, методического и технологического обеспечения.",
    "crumbs": [
      "Главная",
      "Управление ИТ-проектами",
      "Аннотация"
    ]
  },
  {
    "objectID": "it-project-management/annotation.html#планируемые-результаты-обучения",
    "href": "it-project-management/annotation.html#планируемые-результаты-обучения",
    "title": "Аннотация учебной дисциплины",
    "section": "Планируемые результаты обучения:",
    "text": "Планируемые результаты обучения:\nПо итогам освоения дисциплины (модуля) обучающийся приобретает способности: - разрабатывает концепцию проекта в рамках обозначенной проблемы: формулирует цель, задачи, обосновывает актуальность, значимость, ожидаемые результаты и возможные сферы их применения; - планирует необходимые ресурсы, в том числе с учетом их заменимости; - осуществляет мониторинг хода реализации проекта, корректирует отклонения, вносит дополнительные изменения в план реализации проекта, уточняет зоны ответственности участников проекта; - планирует командную работу, распределяет поручения и делегирует полномочия членам команды.",
    "crumbs": [
      "Главная",
      "Управление ИТ-проектами",
      "Аннотация"
    ]
  },
  {
    "objectID": "it-project-management/annotation.html#оценка-качества-освоения-дисциплины",
    "href": "it-project-management/annotation.html#оценка-качества-освоения-дисциплины",
    "title": "Аннотация учебной дисциплины",
    "section": "Оценка качества освоения дисциплины",
    "text": "Оценка качества освоения дисциплины\nОценка качества освоения программы по дисциплине «Анализ и моделирование бизнес-процессов организации. Управление IТ-проектами» подразумевает три формы: текущий контроль, рубежный контроль и промежуточный контроль успеваемости.\nТекущий контроль заключается в проверке домашних заданий, выполняемых слушателями к каждому практическому занятию. В рамках практических занятий по анализу бизнес-процессов планируется составление описания, представленного в виде блок-схем, одного юридического бизнес-процесса отдельно взятой компании. В рамках практических занятий по управлению IТ-проектами планируется составление описания работы над отдельным IТ-проектом в сфере автоматизации юридических процессов.\nРубежный контроль проводится в течение семестра в форме письменного теста или электронного тестирования. Промежуточный контроль успеваемости по дисциплине проводится на зачете.\nДля успешной сдачи зачета слушателю необходимо ответить на вопросы билета.",
    "crumbs": [
      "Главная",
      "Управление ИТ-проектами",
      "Аннотация"
    ]
  },
  {
    "objectID": "business-process-modeling/index.html",
    "href": "business-process-modeling/index.html",
    "title": "Анализ и моделирование бизнес-процессов",
    "section": "",
    "text": "Аннотация учебной дисциплины \nТема 1. Основы структурного анализа. Основы процессного управления.\nТема 2. Методы анализа бизнес-процессов организации.\nТема 3. Моделирование деятельности организации.\nТема 4. Совершенствование бизнес-процессов организации. Операционные риски.\nМетодические материалы для подготовки к зачету\nМетодические материалы для подготовки к экзамену\nТест для подготовки к ассесменту",
    "crumbs": [
      "Главная",
      "Анализ и моделирование бизнес-процессов"
    ]
  },
  {
    "objectID": "business-process-modeling/index.html#содержание-учебного-модуля",
    "href": "business-process-modeling/index.html#содержание-учебного-модуля",
    "title": "Анализ и моделирование бизнес-процессов",
    "section": "",
    "text": "Аннотация учебной дисциплины \nТема 1. Основы структурного анализа. Основы процессного управления.\nТема 2. Методы анализа бизнес-процессов организации.\nТема 3. Моделирование деятельности организации.\nТема 4. Совершенствование бизнес-процессов организации. Операционные риски.\nМетодические материалы для подготовки к зачету\nМетодические материалы для подготовки к экзамену\nТест для подготовки к ассесменту",
    "crumbs": [
      "Главная",
      "Анализ и моделирование бизнес-процессов"
    ]
  },
  {
    "objectID": "business-process-modeling/annotation.html",
    "href": "business-process-modeling/annotation.html",
    "title": "Аннотация учебной дисциплины",
    "section": "",
    "text": "получение обучающимися теоретических знаний о системном, процессно-ориентированном подходе к управлению деятельностью, методологиях и инструментах моделирования и анализа бизнес-процессов.",
    "crumbs": [
      "Главная",
      "Анализ и моделирование бизнес-процессов",
      "Аннотация"
    ]
  },
  {
    "objectID": "business-process-modeling/annotation.html#цель-реализации-программы-дисциплины",
    "href": "business-process-modeling/annotation.html#цель-реализации-программы-дисциплины",
    "title": "Аннотация учебной дисциплины",
    "section": "",
    "text": "получение обучающимися теоретических знаний о системном, процессно-ориентированном подходе к управлению деятельностью, методологиях и инструментах моделирования и анализа бизнес-процессов.",
    "crumbs": [
      "Главная",
      "Анализ и моделирование бизнес-процессов",
      "Аннотация"
    ]
  },
  {
    "objectID": "business-process-modeling/annotation.html#планируемые-результаты-обучения",
    "href": "business-process-modeling/annotation.html#планируемые-результаты-обучения",
    "title": "Аннотация учебной дисциплины",
    "section": "Планируемые результаты обучения:",
    "text": "Планируемые результаты обучения:\nПо итогам освоения дисциплины (модуля) обучающийся приобретает способности:\n\nчитает и правильно интерпретирует ER-диаграммы (Сущность-Связь);\nраспознаёт особенности функциональной, процессной и проектной модели управления в деятельности организации;\nиспользует терминологию процессного управления;\nопределяет цели и метрики бизнес-процессов;\nстроит eEPC-диаграммы для моделей бизнес-процессов;\nнаходит и исправляет ошибки в eEPC-диаграммах;\nсравнивает особенности 12-процессной модели, моделей eTOM, SCORe, моделей SAP, IBM;\nформулирует цели и методы анализа бизнес-процессов;\nанализирует причинно-следственные связи;\nидентифицирует и классифицирует ошибки бизнес-процессов, предлагает способы их исправления;\nсамостоятельно выделяет бизнес-процессы по описанию деятельности организации;\nформулирует основные подходы концепции управления бизнес-процессами - Business Process Management (BPM);\nразрабатывает модели бизнес-процессов в виде BPMN-диаграмм;\nоценивает применимость подхода Process mining для анализа бизнес-процессов;\nвладеет базовой терминологией, связанной с управлением рисками.",
    "crumbs": [
      "Главная",
      "Анализ и моделирование бизнес-процессов",
      "Аннотация"
    ]
  },
  {
    "objectID": "business-process-modeling/annotation.html#оценка-качества-освоения-дисциплины",
    "href": "business-process-modeling/annotation.html#оценка-качества-освоения-дисциплины",
    "title": "Аннотация учебной дисциплины",
    "section": "Оценка качества освоения дисциплины",
    "text": "Оценка качества освоения дисциплины\nОценка качества освоения программы по дисциплине «Анализ и моделирование бизнес-процессов организации» подразумевает три формы: текущий контроль, рубежный контроль и промежуточный контроль успеваемости.\nТекущий контроль заключается в проверке домашних заданий, выполняемых слушателями к каждому практическому занятию. В рамках практических занятий по анализу бизнес-процессов планируется составление описания, представленного в виде блок-схем, одного юридического бизнес-процесса отдельно взятой компании.\nРубежный контроль проводится в течение семестра в форме письменного теста или электронного тестирования.\nПромежуточный контроль успеваемости по дисциплине проводится на зачете и экзамене.\nДля успешной сдачи зачета и экзамена слушателю необходимо:\n\nпройти промежуточный и итоговый ассесмент (проверку) Университета «Иннополис»;\nвыполнить задание по созданию алгоритма под конкретную задачу.",
    "crumbs": [
      "Главная",
      "Анализ и моделирование бизнес-процессов",
      "Аннотация"
    ]
  },
  {
    "objectID": "bibliography/basic.html",
    "href": "bibliography/basic.html",
    "title": "Основная литература",
    "section": "",
    "text": "1. Информационно-технологическое обеспечение юридической деятельности (LegalTech) под ред. А. В. Минбалеева, М.: Проспект, 2022.\n\n\n2. Ульянова Н. Д. Основные принципы алгоритмизации: Учебно-методическое пособие по дисциплине «Алгоритмизация и программирование» / Н. Д. Ульянова, Брянск:, 2020.\n\n\n3. Чернышев С. А. Принципы, паттерны и методологии разработки программного обеспечения: Учебное пособие для вузов / С. А. Чернышев, М.: ЮРАЙТ, 2021.\n\n\n4. Сидорова Е. А. [и др.]. Основы алгоритмизации: Учебно-методическое пособие к выполнению самостоятельной работы / Е. А. Сидорова, С. П. Железняк, Т. В. Манохина, С. А. Ступаков, Омск:, 2020.",
    "crumbs": [
      "Главная",
      "Литература",
      "Основная литература"
    ]
  },
  {
    "objectID": "authors.html",
    "href": "authors.html",
    "title": "Авторы",
    "section": "",
    "text": "Программа составлена при участии и экспертизе компаний КонсультантПлюс, Гарант и Botman.one."
  },
  {
    "objectID": "authors.html#авторы-программы",
    "href": "authors.html#авторы-программы",
    "title": "Авторы",
    "section": "Авторы программы",
    "text": "Авторы программы\n\nМинбалеев А.В., д.ю.н., заведующий кафедрой информационного права и цифровых технологий ФГАОУ ВО «Московский государственный юридический университет имени О.Е. Кутафина (МГЮА)».\nНаумов В.Б., д.ю.н., профессор кафедры информационного права и цифровых технологий, управляющий партнер санкт-петербургского офиса DENTONS, соруководитель европейской практики в области регулирования Интернета и технологий.\nМартынова Т.Л., к.т.н., доцент кафедры информационного права и цифровых технологий ФГАОУ ВО «Московский государственный юридический университет имени О.Е. Кутафина (МГЮА)».\nСоломатин Е.Б., к.ф.-м.н., эксперт РАНХиГС, руководитель программы МВА Телеком бизнес-школы МИРБИС, директор по развитию компании «Мегапьютер Интеллидженс»;\nБольшаков Д.В., создатель low-code системы Botman.one.\nАвакян Е.Г., преподаватель кафедры интеллектуальных прав, советник адвокатского бюро «Егоров, Пугинский, Афанасьев и партнеры», исполнительный директор НК «Содействие развитию корпоративного законодательства», действительный государственный советник юстиции 2 класса.\nСоловьева Е.В., к.п.н., руководитель проекта «Цифровая кафедра» Центра управления изменениями ФГАОУ ВО «Московский государственный юридический университет имени О.Е. Кутафина (МГЮА)»."
  },
  {
    "objectID": "authors.html#авторы-учебных-материалов",
    "href": "authors.html#авторы-учебных-материалов",
    "title": "Авторы",
    "section": "Авторы учебных материалов",
    "text": "Авторы учебных материалов\n\nГолкина Галина Евгеньевна, к.э.н., доцент кафедры информационного права и цифровых технологий Университета имени О.Е. Кутафина (МГЮА)\nКрасников Александр Сергеевич, к.ф.-м.н., доцент кафедры «Информационная безопасность» Московского политехнического университета, доцент кафедры информационного права и цифровых технологий Университета имени О.Е. Кутафина (МГЮА)\nМихайлов Александр Геннадьевич, к.т.н., MBA, старший преподаватель кафедры информационного права и цифровых технологий Университета имени О.Е. Кутафина (МГЮА), MBA по стратегическому управлению, Генеральный директор компании «Консалтинг по управлению ИТ», преподаватель по ИТ-стратегиям и цифровой трансформации бизнеса (в бизнес-школах МИРБИС, РАНХиГС, ГУУ и др.)\nАгеев Михаил Евгеньевич"
  },
  {
    "objectID": "attestation/exam.html#анализ-и-моделирование-бизнес-процессов-организации",
    "href": "attestation/exam.html#анализ-и-моделирование-бизнес-процессов-организации",
    "title": "Примеры оценочных средств к промежуточной и итоговой аттестации",
    "section": "Анализ и моделирование бизнес-процессов организации",
    "text": "Анализ и моделирование бизнес-процессов организации\n\nПримеры задач\n\n\nТеоретические вопросы",
    "crumbs": [
      "Главная",
      "Итоговая аттестация",
      "Примеры оценочных средств"
    ]
  },
  {
    "objectID": "attestation/exam.html#управление-иt-проектами",
    "href": "attestation/exam.html#управление-иt-проектами",
    "title": "Примеры оценочных средств к промежуточной и итоговой аттестации",
    "section": "Управление ИT-проектами",
    "text": "Управление ИT-проектами\n\nПримеры задач\n\n\nТеоретические вопросы",
    "crumbs": [
      "Главная",
      "Итоговая аттестация",
      "Примеры оценочных средств"
    ]
  },
  {
    "objectID": "attestation/exam.html#методологии-разработки-программного-обеспечения",
    "href": "attestation/exam.html#методологии-разработки-программного-обеспечения",
    "title": "Примеры оценочных средств к промежуточной и итоговой аттестации",
    "section": "Методологии разработки программного обеспечения",
    "text": "Методологии разработки программного обеспечения\n\nПримеры задач\n\n\nТеоретические вопросы",
    "crumbs": [
      "Главная",
      "Итоговая аттестация",
      "Примеры оценочных средств"
    ]
  },
  {
    "objectID": "attestation/exam.html#автоматизация-юридической-работы-legaltech",
    "href": "attestation/exam.html#автоматизация-юридической-работы-legaltech",
    "title": "Примеры оценочных средств к промежуточной и итоговой аттестации",
    "section": "Автоматизация юридической работы (Legaltech)",
    "text": "Автоматизация юридической работы (Legaltech)\n\nПримеры задач\n\n\nТеоретические вопросы",
    "crumbs": [
      "Главная",
      "Итоговая аттестация",
      "Примеры оценочных средств"
    ]
  },
  {
    "objectID": "algorithmics/lecture-01/index.html#цели-и-задачи",
    "href": "algorithmics/lecture-01/index.html#цели-и-задачи",
    "title": "Лекция 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов.",
    "section": "Цели и задачи",
    "text": "Цели и задачи\n\nРаскрыть сущность основных понятий, связанных с алгоритмами, их свойствами и способами записи.\nСформировать представление о способах анализа задачи и формулирования последовательности действий для их решения.\nРазвить навыки аналитического мышления при разработке алгоритмов.\nПоказать важность алгоритмов в различных областях науки, техники и повседневной жизни, а также продемонстрировать, как они могут быть представлены в разных формах.\nВоспитывать внимательность, точность и дисциплину при работе с алгоритмами.",
    "crumbs": [
      "Главная",
      "Алгоритмика",
      "Тема 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов.",
      "Лекция 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов."
    ]
  },
  {
    "objectID": "algorithmics/lecture-01/index.html#рассматриваемые-вопросы",
    "href": "algorithmics/lecture-01/index.html#рассматриваемые-вопросы",
    "title": "Лекция 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов.",
    "section": "Рассматриваемые вопросы",
    "text": "Рассматриваемые вопросы\n\nПонятие алгоритма.\nИстория понятия алгоритма.\nЧисловые и логические алгоритмы.\nАлгоритмы в юридических процессах и правовых нормах.\nСвойства алгоритмов.\nПринципы разработки алгоритмов.\nМетоды разработки алгоритмов.\nОсновные этапы решения задачи.\nТестирование алгоритма.\nСпособы записи алгоритмов.\nПравила оформления схем алгоритмов.\nЕдиная система программной документации в соответствии с ГОСТ 19.701-90.",
    "crumbs": [
      "Главная",
      "Алгоритмика",
      "Тема 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов.",
      "Лекция 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов."
    ]
  },
  {
    "objectID": "algorithmics/lecture-01/index.html#понятие-алгоритма",
    "href": "algorithmics/lecture-01/index.html#понятие-алгоритма",
    "title": "Лекция 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов.",
    "section": "Понятие алгоритма",
    "text": "Понятие алгоритма\nАлгоритм — это последовательность чётко определённых, конечных и логически упорядоченных шагов, направленных на решение конкретной задачи или достижение определённой цели.\nАлгоритмы лежат в основе математики, информатики, программирования и многих других дисциплин. Они позволяют формализовать процесс преобразования входных данных в выходные, гарантируя корректный результат при соблюдении условий.\n\nПример алгоритма рассмотрения жалобы гражданина\n\nШаг 1. Прием документа.\nШаг 2. Проверка подведомственности.\nШаг 3. Назначение ответственного лица.\nШаг 4. Сроки рассмотрения (30 дней).\nШаг 5. Формирование ответа.\n\n\n\nСтруктура алгоритма\n\nВвод данных: Получение исходной информации (например, числа, текст, сигналы).\nОбработка данных: Выполнение операций: вычисления, сравнения, ветвления, циклы.\nВывод результата: Предоставление итоговых данных (например, отсортированный список, решение уравнения).",
    "crumbs": [
      "Главная",
      "Алгоритмика",
      "Тема 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов.",
      "Лекция 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов."
    ]
  },
  {
    "objectID": "algorithmics/lecture-01/index.html#история-понятия-алгоритма",
    "href": "algorithmics/lecture-01/index.html#история-понятия-алгоритма",
    "title": "Лекция 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов.",
    "section": "История понятия алгоритма",
    "text": "История понятия алгоритма\nПонятие алгоритма имеет многовековую историю. От вавилонских глиняных табличек до квантовых компьютеров алгоритмы эволюционировали, отражая развитие человеческого мышления.\nОт клинописных табличек до GPT-4 история алгоритмов — это история поиска порядка в хаосе. Сегодня алгоритмы управляют финансами, правосудием и даже творчеством, но их суть остаётся неизменной: четкая инструкция для достижения цели.\nПонимание их истории помогает не только создавать новые технологии, но и осознанно использовать их в правовом и социальном контексте.\n\nВавилонские алгоритмы (1800–1600 до н.э.)\nВавилоняне использовали алгоритмы для решения многих практических задач.\n\n\n\n\n\nВавилонские глиняные таблички\n\n\n\n\nРасчеты с процентами на глиняных табличках.\nАлгоритм извлечения квадратного корня (метод Герона, позже описанный греками).\n\n\n\n\n\nДревняя Греция\n\nЕвклид (ок. 300 г. до н.э.)\nДревнегреческий математик, геометр, автор первого из дошедших до нас теоретических трактатов по математике.\n\n\nЕвклид в «Началах» формализовал алгоритм нахождения НОД (наибольшего общего делителя):\nалг НОД(a, b)\nнач\n  пока b &lt;&gt; 0\n    t := b\n    b := a mod b\n    a := t\n  кон\n  вывод a\nкон\n\n\n\n\nЕвклид\n\n\n\n\n\n\n\nИсламский Золотой век\n\nМухаммада ибн Муса аль-Хорезми (ок. 780–850)\nПерсидский или среднеазиатский учёный IX века из Хорезма, математик, астроном, географ и историк.\n\n\n\n\n\nМухаммад ибн Муса аль-Хорезми\n\n\n\n\nпервым рассматривал алгебру как самостоятельную дисциплину и преподавал ее в элементарной форме;\nразработал подробные тригонометрические таблицы;\nв своих трудах детально описывал пошаговые методы решения уравнений;\nв Европе его имя (латинизированное «Algorithmi») стало основой термина «алгоритм».\n\n\n\n\n\n\nСредневековая Европа: XII–XIII века\n\nФибоначчи (Леонардо Пизанский)(ок. 1170–1240)\nИтальянский математик, стоявший у истоков европейской математической революции.\n\n\n\nпознакомил Европу с арабскими цифрами (0–9), заменившими римские;\nразработал методы расчета прибыли, конвертации валют и решения практических задач для купцов;\nпопуляризировал алгоритмы для коммерческих расчетов;\nввел в рассмотрение числовой ряд, где каждое число — сумма двух предыдущих: 0, 1, 1, 2, 3, 5, 8, 13…\n\n\n\n\n\nЛеонардо Пизанский\n\n\n\n\n\n\nРаймонд Луллий (1235–1315)\nКаталонский миссионер, поэт, философ и теолог, один из наиболее влиятельных и оригинальных мыслителей европейского высокого Средневековья.\n\n\n\n\n\nРаймонд Луллий\n\n\n\n\nсчитается одним из родоначальников европейской арабистики и комбинаторики;\nодним из первых применил диаграмму связей;\nсоздал механическое устройство для генерации логических комбинаций (прообраз алгоритмического мышления).\n\n\n\n\n\n\nНовое время: формализация и универсальность\n\nГотфрид Лейбниц (21.06.1646–14.11.1716)\nНемецкий философ, логик, математик, механик, физик, юрист, историк, дипломат, изобретатель и языковед.\nОснователь и первый президент Берлинской академии наук, член Лондонского королевского общества (1673), иностранный член Французской академии наук.\n\n\n\nнезависимо от Ньютона создал математический анализ;\nсоздал комбинаторику как науку;\nзаложил основы математической логики;\nописал двоичную систему счисления с цифрами 0 и 1.\n\n\n\n\n\nГотфрид Лейбниц\n\n\n\n\n\n\nЧарльз Бэббидж (26.12.1791–18.10.1871)\nАнглийский математик, считающийся предвестником современных компьютеров.\nИностранный член-корреспондент Императорской академии наук в Санкт-Петербурге (1832). Написал труды по теории функций, механизации счёта в экономике.\n\n\n\n\n\nЧарльз Бэббидж\n\n\n\n\nсоздал первый механический калькулятор для автоматизации расчётов математических таблиц;\nразработал первую в истории концепцию программируемого компьютера с арифметическим устройством, памятью и использованием перфокарт для ввода данных.\n\n\n\n\n\nАда Лавлейс (10.12.1815–27.11.1852)\nАнглийский математик, первая в истории программист. Дочь поэта Джорджа Байрона, но воспитывалась матерью, которая поощряла её интерес к науке. В 1833 году познакомилась с Чарльзом Бэббиджем, создателем концепции Аналитической машины — прообраза компьютера.\n\n\n\nнаписала первый алгоритм для вычисления чисел Бернулли — это считают первой компьютерной программой;\nразработала алгоритм для вычисления чисел Бернулли с помощью машины Бэббиджа, ставший первой в мире программой;\nпредсказала, что вычислительные устройства смогут работать не только с числами, но и с символами, музыкой и искусством.\n\n\n\n\n\nАда Лавлейс\n\n\n\n\n\n\n\nXX век: математизация и компьютерная революция\n\nМашина Тьюринга\nАлан Тьюринг формализовал алгоритм как последовательность действий, выполняемых абстрактной машиной. Его работа заложила основы теории вычислений.\n\n\n\n\n\nМашина Тьюринга\n\n\n\nПример алгоритма для машины Тьюринга:\nЗадача: Инвертировать биты (0→1, 1→0).\nПравила:\n- Если состояние Q1 и символ 0: пиши 1, двигайся вправо, оставайся в Q1.\n- Если состояние Q1 и символ 1: пиши 0, двигайся вправо, оставайся в Q1.\n\n\n\n\n1950-е: Языки программирования\n\nFORTRAN (1957) и ALGOL (1958) сделали алгоритмы доступными для массовой разработки.\nАлгоритмы сортировки (например, быстрая сортировка Хоара, 1960) стали классикой Computer Science.\n\n\n\n\nXXI век: алгоритмы как новая реальность\n\nBig Data и машинное обучение\n\nАлгоритмы PageRank (Google) и нейросетей (DeepMind) изменили подход к обработке информации.\nПример: алгоритм рекомендаций Netflix использует матричную факторизацию для предсказания предпочтений.\n\n\n\nЭтические вызовы\n\nДискриминация алгоритмов: в 2016 г. система COMPAS (США) была обвинена в расизме при оценке риска рецидива.\nGDPR в ЕС (2018) регулирует автоматизированное принятие решений, требующее «человеческого надзора».",
    "crumbs": [
      "Главная",
      "Алгоритмика",
      "Тема 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов.",
      "Лекция 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов."
    ]
  },
  {
    "objectID": "algorithmics/lecture-01/index.html#числовые-и-логические-алгоритмы",
    "href": "algorithmics/lecture-01/index.html#числовые-и-логические-алгоритмы",
    "title": "Лекция 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов.",
    "section": "Числовые и логические алгоритмы",
    "text": "Числовые и логические алгоритмы\nЧисловые и логические алгоритмы — это два основных типа алгоритмов, которые используются для решения различных задач в информатике и математике.\nЧисловые и логические алгоритмы играют важную роль в различных областях науки и техники.\nПонимание их различий и сходств позволяет эффективно применять их в зависимости от конкретных задач и требований.\n\nЧисловые алгоритмы\nЧисловые алгоритмы используются для выполнения расчетов, связанных с количественными данными. Такие алгоритмы могут включать в себя арифметические операции, вычисления, обработку числовых данных и т.д. Они помогают юристам и судам принимать решения на основе точных вычислений.\n\nПримеры:\n\nОпределение размера алиментов, которые родитель должен выплачивать на содержание ребенка.\nОпределение суммы компенсации, которую работодатель должен выплатить за просрочку зарплаты.\nОпределение суммы неустойки за нарушение условий договора (например, просрочка поставки товара).\nОпределение суммы штрафа за конкретное нарушение ПДД.\nОпределение суммы компенсации при ДТП.\n\n\n\n\nЛогические алгоритмы\nЛогические алгоритмы основаны на последовательности логических операций (например, «если-то», «и», «или») и помогают систематизировать процесс рассуждений. В юриспруденции они используются для анализа условий, проверки соответствия нормам права и принятия решений на основе заданных правил.\n\nПримеры:\n\nОпределение статьи Уголовного кодекса РФ, по которой следует квалифицировать деяние.\nОпределение, соответствует ли договор требованиям законодательства.\nВыбор суда, который должен рассматривать дело.\nОпределение порядка разрешения трудового спора.\nОпределение наличия оснований для освобождения от уголовной ответственности.\nОпределение права на налоговый вычет.\n\n\n\n\nСравнение числовых и логических алгоритмов\n\nСходства\n\nОба типа алгоритмов могут быть реализованы в различных языках программирования.\nОба могут использоваться для решения задач и оптимизации процессов.\nОба типа алгоритмов могут быть комбинированы для решения более сложных задач.\n\n\n\nРазличия\n\nЧисловые алгоритмы фокусируются на числовых данных и их обработке, тогда как логические алгоритмы работают с логическими выражениями и условиями.\nЧисловые алгоритмы часто требуют более сложных математических вычислений, в то время как логические алгоритмы больше ориентированы на принятие решений и управление потоком выполнения программы.",
    "crumbs": [
      "Главная",
      "Алгоритмика",
      "Тема 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов.",
      "Лекция 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов."
    ]
  },
  {
    "objectID": "algorithmics/lecture-01/index.html#алгоритмы-в-юридических-процессах-и-правовых-нормах",
    "href": "algorithmics/lecture-01/index.html#алгоритмы-в-юридических-процессах-и-правовых-нормах",
    "title": "Лекция 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов.",
    "section": "Алгоритмы в юридических процессах и правовых нормах",
    "text": "Алгоритмы в юридических процессах и правовых нормах\nАлгоритмы в юридических процессах и правовых нормах играют все более важную роль в современном правоприменении и правосудии. Они могут использоваться для автоматизации различных аспектов юридической работы, включая анализ документов, предсказание исходов дел, а также для поддержки принятия решений.\nАлгоритмы могут значительно улучшить эффективность юридических процессов, но их использование должно быть тщательно продумано и регулировано, чтобы обеспечить соблюдение правовых норм и защиту прав граждан.\n\nАвтоматизация рутинных задач\nАлгоритмы могут помочь в автоматизации таких задач, как обработка юридических документов, составление контрактов и управление делами. Это позволяет юристам сосредоточиться на более сложных и творческих аспектах своей работы.\n\n\nАнализ данных\nС помощью алгоритмов можно анализировать большие объемы юридических данных, выявлять закономерности и тенденции, что может быть полезно для подготовки к судебным разбирательствам или для разработки правовой стратегии.\n\n\nПредсказание исходов дел\nНекоторые алгоритмы могут использоваться для предсказания вероятности успеха в судебных разбирательствах на основе анализа предыдущих дел и решений судов. Это может помочь юристам и их клиентам принимать более обоснованные решения.\n\n\nПоддержка принятия решений\nАлгоритмы могут быть интегрированы в системы поддержки принятия решений, которые помогают судьям и адвокатам оценивать различные варианты действий и их последствия.\n\n\nЭтика и правовые нормы\nВнедрение алгоритмов в юридическую практику также поднимает важные этические и правовые вопросы. Необходимо учитывать, как алгоритмы могут влиять на справедливость, прозрачность и доступность правосудия. Важно, чтобы алгоритмы были разработаны с учетом правовых норм и принципов, чтобы избежать предвзятости и дискриминации.",
    "crumbs": [
      "Главная",
      "Алгоритмика",
      "Тема 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов.",
      "Лекция 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов."
    ]
  },
  {
    "objectID": "algorithmics/lecture-01/index.html#свойства-алгоритмов",
    "href": "algorithmics/lecture-01/index.html#свойства-алгоритмов",
    "title": "Лекция 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов.",
    "section": "Свойства алгоритмов",
    "text": "Свойства алгоритмов\n\nДискретность\nАлгоритм должен представлять процесс решения задачи как упорядоченное выполнение некоторых простых шагов. При этом для выполнения каждого шага алгоритма требуется конечный отрезок времени, то есть преобразование исходных данных в результат осуществляется во времени дискретно.\n\n\nДетерминированность (определённость)\nВ каждый момент времени следующий шаг работы однозначно определяется состоянием системы. Таким образом, алгоритм выдаёт один и тот же результат (ответ) для одних и тех же исходных данных.\nСуществуют вероятностные алгоритмы, в которых следующий шаг работы зависит от текущего состояния системы и генерируемого случайного числа. Однако при включении метода генерации случайных чисел в список «исходных данных» вероятностный алгоритм становится подвидом обычного.\n\n\nПонятность\nАлгоритм должен включать только те команды, которые доступны исполнителю и входят в его систему команд.\n\n\nКонечность\nАлгоритм должен завершаться за конечное количество шагов. Это означает, что он не должен зацикливаться и должен иметь четко определенные условия завершения.\n\n\nМассовость (общность)\nАлгоритм применим к множеству однотипных задач, а не к одной конкретной. Например, алгоритм сортировки работает для любого набора чисел.\n\n\nРезультативность\nАлгоритм должен завершаться определенным результатом (или сообщением об отсутствии решения).\n\n\nЭффективность\nАлгоритм должен быть эффективным как по времени, так и по использованию ресурсов. Это означает минимизацию количества операций и использование оптимальных структур данных.\n\n\nПроверяемость\nАлгоритм должен быть проверяемым, что означает возможность тестирования его корректности и эффективности. Это может включать в себя создание тестовых случаев и использование методов верификации.",
    "crumbs": [
      "Главная",
      "Алгоритмика",
      "Тема 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов.",
      "Лекция 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов."
    ]
  },
  {
    "objectID": "algorithmics/lecture-01/index.html#принципы-разработки-алгоритмов",
    "href": "algorithmics/lecture-01/index.html#принципы-разработки-алгоритмов",
    "title": "Лекция 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов.",
    "section": "Принципы разработки алгоритмов",
    "text": "Принципы разработки алгоритмов\nСовременная юридическая практика всё чаще требует работы с алгоритмами — от анализа договоров до прогнозирования судебных решений.\nПринципы разработки алгоритмов являются основой для создания качественных и эффективных решений.\nСоблюдение этих принципов помогает разработчикам создавать алгоритмы, которые не только решают поставленные задачи, но и делают это оптимальным образом.\nДаже простые алгоритмы на школьном языке помогают юристам: - Избегать арифметических ошибок в расчетах. - Стандартизировать проверку документов. - Соблюдать процессуальные сроки.\nВажно: Все алгоритмы должны сверяться с актуальными редакциями законов.\n\nЧеткость и детерминированность\nКаждый шаг алгоритма должен быть однозначным и не допускать разночтений.\nПример: Алгоритм проверки дееспособности клиента:\nалг ПроверкаДееспособности\n  нач\n    ввести Возраст, РешениеСуда\n    если Возраст &gt;= 18 и РешениеСудаоНеедеспособности = \"отсутствует\" то\n      вывод \"Дееспособен\"\n    иначе\n      вывод \"Требуется опекун\"\n    все\nкон\n\n\nЭффективность\nАлгоритм должен решать задачу за минимальное время и с разумными затратами ресурсов.\nПример: Поиск судебного прецедента по ключевым словам:\nалг НайтиПрецедент\nнач\n  ввести КлючевыеСлова\n    для каждого дела в БазеДанных\n      если дело.Текст содержит КлючевыеСлова то\n        вывод дело.Номер\n      все\n    кон\nкон\n\n\nМодульность\nРазделяйте алгоритм на независимые блоки (модули). Это упрощает тестирование и повторное использование кода.\nПример: Проверка договора аренды на соответствие ФЗ № 123:\nалг ПроверитьДоговорАренды\nнач\n  ПроверитьСтороны()\n  ПроверитьСрок()\n  ПроверитьОплату()\nкон\nалг ПроверитьСрок\nнач\n  ввести СрокДоговора\n    если СрокДоговора &gt; 5 лет то\n      вывод \"Требуется регистрация в Росреестре\"\n    все\nкон\n\n\nКорректность\nАлгоритм должен давать правильный результат для всех возможных входных данных, включая исключения из правил.\nПример: Расчет неустойки за просрочку платежа (ст. 395 ГК РФ).\nалг РасчетНеустойки\nнач\n  ввести СуммаДолга, СтавкаЦБ, ДниПросрочки\n  если ДниПросрочки &gt; 0 то\n    Неустойка = СуммаДолга * (СтавкаЦБ / 100) * (ДниПросрочки / 365)\n    вывод \"К уплате: \", Неустойка\n  иначе\n    вывод \"Просрочки нет\"\n  все\nкон\n\n\nПростота и читаемость\nИзбегайте избыточной сложности. Алгоритм должен быть понятен даже без комментариев даже новичкам. Используйте говорящие названия переменных и избегайте сложных конструкций.\n\nПлохой примерХороший пример\n\n\n\nНепонятные названия переменных (а, б, 0 вместо логических значений).\nНет пояснения, что проверяется.\n\nалг ПР1\nнач\n  ввод а, б\n  если а &gt;= 18 и б = 0 то\n    вывод \"ДА\"\n  иначе\n    вывод \"НЕТ\"\n  все\nкон\n\n\nЮридическая проверка дееспособности:\n\nНазвания переменных прямо указывают на их смысл.\nУсловие соответствует ст. 21 ГК РФ.\nРезультат содержит юридически значимую формулировку.\n\nалг ПроверкаДееспособности\nнач\n  ввести Возраст, СтатусНедееспособности // Статус: 0 — дееспособен, 1 — недееспособен\n  если Возраст &gt;= 18 и СтатусНедееспособности == 0 то\n    вывод \"Лицо дееспособно: договор действителен\"\n  иначе\n    вывод \"Требуется согласие опекуна или суда\"\n  все\nкон\n\n\n\n\n\nАдаптивность\nАлгоритм должен легко модифицироваться при изменении условий.\nПример: После изменения НДС с 20% до 22%:\nалг РасчетНДС\nнач\n  // Раньше: Ставка = 20\n  Ставка = 22\n  ввести Сумма\n  НДС = Сумма * Ставка / 100\n  вывод НДС\nкон\n\n\nТестируемость\nРазрабатывайте алгоритм так, чтобы каждый этап можно было проверить.\nПример: Тест для алгоритма раздела имущества (ст. 38 СК РФ)**:\nалг РазделИмущества\nнач\n  ввести СтатусИмущества\n  если СтатусИмущества = \"совместное\" то\n    вывод \"Раздел 50/50\"\n  иначе\n    вывод \"Имущество не делится\"\n  все\nкон\nТест-кейсы:\n\nСтатус = “совместное”. Ожидаемый результат: “50/50”\nСтатус = “наследство”. Ожидаемый результат: “не делится”\n\n\n\nПрозрачность (интерпретируемость результатов)\nАлгоритм должен позволять объяснить результат (важно для GDPR и ФЗ-152).\nПример: Отказ в кредите с указанием причины:\nалг ПроверкаКредита\nнач\n  ввести КредитнаяИстория, Зарплата\n  если КредитнаяИстория = \"плохая\" то\n    вывод \"Отказ: плохая кредитная история\"\n  иначе если Зарплата &lt; 20000 то\n    вывод \"Отказ: недостаточный доход\"\n  иначе\n    вывод \"Одобрено\"\n  все\nкон",
    "crumbs": [
      "Главная",
      "Алгоритмика",
      "Тема 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов.",
      "Лекция 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов."
    ]
  },
  {
    "objectID": "algorithmics/lecture-01/index.html#методы-разработки-алгоритмов",
    "href": "algorithmics/lecture-01/index.html#методы-разработки-алгоритмов",
    "title": "Лекция 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов.",
    "section": "Методы разработки алгоритмов",
    "text": "Методы разработки алгоритмов\nМетоды разработки алгоритмов предоставляют разработчикам инструменты и техники для создания эффективных решений.\nЭти методы могут варьироваться в зависимости от сложности задачи, требований к производительности и других факторов. Рассмотрим основные методы разработки алгоритмов.\nВыбор подходящего метода зависит от конкретной задачи, требований к производительности и других факторов.\nПонимание различных методов разработки алгоритмов позволяет разработчикам более эффективно решать задачи и оптимизировать свои решения\n\nМетод «разделяй и властвуй»\nМетод «разделяй и властвуй» заключается в разбиении сложной задачи на более простые подзадачи, которые решаются независимо друг от друга. После решения подзадач результаты комбинируются для получения окончательного решения. Примеры алгоритмов, использующих этот метод, включают быструю сортировку и алгоритм Краскала для нахождения минимального остовного дерева.\n\n\nИтеративный метод\nИтеративный метод основывается на повторении определенных шагов до достижения желаемого результата. Этот подход часто используется в численных методах, таких как метод Ньютона для нахождения корней уравнений. Итеративные алгоритмы могут быть более эффективными в некоторых случаях, чем рекурсивные.\n\n\nРекурсивный метод\nРекурсия — это метод, при котором функция вызывает саму себя для решения подзадачи. Данный подход часто используется для решения задач, которые могут быть разбиты на более мелкие аналогичные задачи, таких как вычисление факториала или обход деревьев. Важно учитывать, что рекурсивные алгоритмы могут потребовать больше памяти из-за хранения контекста вызовов.\n\n\nЖадный метод\nЖадные алгоритмы принимают локально оптимальные решения на каждом шаге с надеждой, что это приведет к глобально оптимальному решению. Этот метод часто используется в задачах оптимизации, таких как задача о рюкзаке или алгоритмы для нахождения минимального остовного дерева.\n\n\nДинамическое программирование\nДинамическое программирование — это метод, который используется для решения задач, которые могут быть разбиты на перекрывающиеся подзадачи. Он сохраняет результаты уже решенных подзадач, чтобы избежать повторных вычислений. Этот метод часто применяется в задачах, связанных с оптимизацией, таких как задача о наибольшей общей подпоследовательности.\n\n\nАлгоритмы перебора\nАлгоритмы перебора (или «грубой силы») исследуют все возможные варианты решения задачи. Хотя этот метод может быть неэффективным для больших наборов данных, он может быть полезен для небольших задач или в случаях, когда другие методы не применимы.\n\n\nМетод проб и ошибок\nЭтот метод включает в себя экспериментирование с различными подходами и анализ результатов. Он может быть полезен в ситуациях, когда нет четкого понимания структуры задачи или когда требуется интуитивный подход к решению.",
    "crumbs": [
      "Главная",
      "Алгоритмика",
      "Тема 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов.",
      "Лекция 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов."
    ]
  },
  {
    "objectID": "algorithmics/lecture-01/index.html#основные-этапы-решения-задачи",
    "href": "algorithmics/lecture-01/index.html#основные-этапы-решения-задачи",
    "title": "Лекция 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов.",
    "section": "Основные этапы решения задачи",
    "text": "Основные этапы решения задачи\nРазработка и реализация алгоритма для решения задачи включает в себя несколько ключевых этапов, которые помогают структурировать процесс и обеспечить эффективность конечного решения.\nСледование этим этапам помогает разработчикам структурировать процесс, минимизировать ошибки и оптимизировать конечный продукт.\nПонимание и применение этих этапов в практике разработки алгоритмов способствует улучшению качества и надежности программного обеспечения.\nРассмотрим основные этапы решения задачи при разработке алгоритма.\n\nАнализ задачи\nНа этом этапе необходимо тщательно изучить условия задачи, определить ее цели и требования. Важно понять, какие данные доступны, какие результаты ожидаются и какие ограничения могут существовать. Анализ задачи помогает сформулировать четкое представление о том, что необходимо достичь.\n\n\nОпределение входных и выходных данных\nПосле анализа задачи следует определить, какие данные будут входными (например, параметры, которые алгоритм будет принимать) и какие данные будут выходными (результаты, которые алгоритм должен возвращать). Четкое определение входных и выходных данных помогает избежать недоразумений и упрощает дальнейшую разработку.\n\n\nРазработка алгоритма\nНа этом этапе происходит непосредственное создание алгоритма. Разработчик выбирает подходящие методы и техники, основываясь на анализе задачи и определении данных. Алгоритм может быть представлен в виде псевдокода, блок-схемы или другого формата, который позволяет четко описать последовательность шагов.\n\n\nТестирование и отладка\nПосле разработки алгоритма необходимо провести его тестирование. Это включает в себя проверку корректности работы алгоритма на различных входных данных, а также выявление и исправление возможных ошибок. Тестирование помогает убедиться, что алгоритм работает так, как задумано, и соответствует требованиям задачи.\n\n\nОценка эффективности\nНа этом этапе важно оценить эффективность алгоритма с точки зрения времени выполнения и использования ресурсов. Разработчик может провести анализ сложности алгоритма, чтобы понять, насколько он оптимален для решения поставленной задачи. Если алгоритм неэффективен, может потребоваться его доработка или выбор другого метода.\n\n\nДокументирование\nСоздание документации является важным этапом, который часто упускается из виду. Документация должна содержать описание алгоритма, его входных и выходных данных, а также примеры использования. Это поможет другим разработчикам понять алгоритм и использовать его в своих проектах.\n\n\nПоддержка и обновление\nПосле внедрения алгоритма в систему важно обеспечить его поддержку и обновление. Это может включать в себя исправление ошибок, улучшение производительности или адаптацию к изменяющимся требованиям. Поддержка алгоритма помогает сохранить его актуальность и эффективность на протяжении времени.",
    "crumbs": [
      "Главная",
      "Алгоритмика",
      "Тема 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов.",
      "Лекция 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов."
    ]
  },
  {
    "objectID": "algorithmics/lecture-01/index.html#тестирование-алгоритма",
    "href": "algorithmics/lecture-01/index.html#тестирование-алгоритма",
    "title": "Лекция 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов.",
    "section": "Тестирование алгоритма",
    "text": "Тестирование алгоритма\nТестирование алгоритмов — это важный этап в процессе разработки, который позволяет убедиться в корректности и эффективности алгоритма.\nОно включает в себя проверку работы алгоритма на различных входных данных, выявление ошибок и оценку его производительности.\nСледование систематическому подходу к тестированию, включая разработку тестовых случаев, автоматизацию и оценку производительности, позволяет разработчикам создавать надежные и высококачественные алгоритмы.\nРассмотрим основные аспекты тестирования алгоритмов.\n\nЦели тестирования алгоритмов\nОсновные цели тестирования алгоритмов включают: - Проверка корректности: Убедиться, что алгоритм возвращает правильные результаты для всех возможных входных данных. - Выявление ошибок: Найти и исправить ошибки, которые могут возникнуть в процессе выполнения алгоритма. - Оценка производительности: Измерить время выполнения и использование ресурсов, чтобы определить, насколько алгоритм эффективен.\n\n\nПодходы к тестированию\nСуществует несколько подходов к тестированию алгоритмов: - Модульное тестирование: Проверка отдельных компонентов алгоритма на корректность. Это позволяет изолировать ошибки и упростить процесс отладки. - Интеграционное тестирование: Проверка взаимодействия различных компонентов алгоритма. Это важно для выявления проблем, которые могут возникнуть при совместной работе нескольких частей. - Системное тестирование: Полное тестирование алгоритма в контексте всей системы, чтобы убедиться, что он работает корректно в реальных условиях.\n\n\nТестовые случаи\nДля эффективного тестирования необходимо разработать тестовые случаи, которые охватывают различные сценарии использования алгоритма. Тестовые случаи могут включать: - Обычные случаи: Стандартные входные данные, для которых алгоритм должен работать корректно. - Граничные случаи: Входные данные, находящиеся на границах допустимых значений, чтобы проверить, как алгоритм справляется с крайними условиями. - Некорректные данные: Входные данные, которые не соответствуют ожидаемым требованиям, чтобы убедиться, что алгоритм обрабатывает ошибки корректно.\n\n\nАвтоматизация тестирования\nАвтоматизация тестирования может значительно упростить процесс и повысить его эффективность. С помощью автоматизированных тестов можно быстро проверять алгоритм на различных входных данных и выявлять ошибки. Это особенно полезно при внесении изменений в алгоритм, так как позволяет быстро убедиться, что новые изменения не нарушили его работу.\n\n\nОценка производительности\nПомимо проверки корректности, важно также оценить производительность алгоритма. Это включает в себя: - Анализ временной сложности: Оценка времени выполнения алгоритма в зависимости от размера входных данных. - Анализ пространственной сложности: Оценка объема памяти, который использует алгоритм.\n\n\nДокументация результатов тестирования\nДокументация результатов тестирования является важным аспектом, который помогает команде разработчиков понять, какие тесты были проведены, какие ошибки были выявлены и как они были исправлены. Это также может быть полезно для будущих разработок и улучшений алгоритма.",
    "crumbs": [
      "Главная",
      "Алгоритмика",
      "Тема 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов.",
      "Лекция 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов."
    ]
  },
  {
    "objectID": "algorithmics/lecture-01/index.html#способы-записи-алгоритмов",
    "href": "algorithmics/lecture-01/index.html#способы-записи-алгоритмов",
    "title": "Лекция 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов.",
    "section": "Способы записи алгоритмов",
    "text": "Способы записи алгоритмов\nЗапись алгоритмов — это важный аспект разработки, который позволяет четко и однозначно представить последовательность действий для решения задачи.\nВыбор способа записи алгоритма зависит от целей разработки, аудитории и сложности задачи.\nПонимание различных способов записи алгоритмов помогает разработчикам эффективно коммуницировать свои идеи и создавать качественные решения.\nСуществует несколько способов записи алгоритмов, каждый из которых имеет свои преимущества и недостатки.\nРассмотрим основные способы записи алгоритмов.\n\nПсевдокод\nПсевдокод — это способ записи алгоритма с использованием простого и понятного языка, который не привязан к конкретному языку программирования. Он позволяет описать логику алгоритма в виде последовательности шагов, используя обычные слова и конструкции. Преимущества псевдокода включают: - Легкость понимания: Псевдокод понятен даже тем, кто не знаком с конкретным языком программирования. - Гибкость: Можно использовать любые конструкции, которые помогают лучше объяснить алгоритм.\n\n\nБлок-схемы\nБлок-схемы — это графическое представление алгоритма, где каждый шаг представлен в виде блока, а связи между шагами — стрелками. Блок-схемы позволяют визуально отобразить логику алгоритма и его структуру. Преимущества блок-схем включают: - Наглядность: Легко увидеть общую структуру алгоритма и его последовательность. - Удобство для презентации: Блок-схемы хорошо подходят для демонстрации алгоритма другим людям.\n\n\nЯзык программирования\nАлгоритм можно записать непосредственно на языке программирования, который будет использоваться для его реализации. Это позволяет сразу увидеть, как алгоритм будет работать в коде. Преимущества записи на языке программирования: - Точность: Код на языке программирования является точным и может быть сразу выполнен. - Возможность тестирования: Можно сразу протестировать алгоритм на практике.\n\n\nТаблицы\nТаблицы могут использоваться для представления алгоритмов, особенно когда необходимо показать взаимосвязи между данными или состояниями. В таблицах можно описать входные данные, выходные данные и шаги алгоритма.\nПреимущества таблиц: - Удобство для представления больших объемов данных. - Легкость в сравнении различных вариантов алгоритма.\n\n\nФормальные нотации\nСуществуют формальные нотации, такие как нотация Бэкуса-Наура (BNF) или другие математические формализмы, которые используются для описания алгоритмов и языков программирования.\nПреимущества формальных нотаций: - Точность: Формальные нотации обеспечивают строгую и однозначную запись. - Подходят для теоретических исследований и анализа.",
    "crumbs": [
      "Главная",
      "Алгоритмика",
      "Тема 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов.",
      "Лекция 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов."
    ]
  },
  {
    "objectID": "algorithmics/lecture-01/index.html#правила-оформления-схем-алгоритмов",
    "href": "algorithmics/lecture-01/index.html#правила-оформления-схем-алгоритмов",
    "title": "Лекция 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов.",
    "section": "Правила оформления схем алгоритмов",
    "text": "Правила оформления схем алгоритмов\nОформление схем алгоритмов — это важный аспект документации в программировании, позволяющий четко и однозначно представить структуру и логику работы алгоритма.\nВ России правила оформления документации для программного обеспечения и алгоритмов регламентированы стандартами, в частности, ГОСТ Р 19.701-90 «Единая система программной документации. Схемы алгоритмов».\nСоблюдение правил оформления схем алгоритмов в соответствии с ГОСТ 19.701-90 играет важную роль в создании программной документации.\nОно обеспечивает универсальность, понятность и точность передачи информации о разработанных алгоритмах, что способствует эффективному взаимодействию между разработчиками, тестировщиками и другими заинтересованными сторонами.\nРассмотрим основные положения и требования этого ГОСТа.",
    "crumbs": [
      "Главная",
      "Алгоритмика",
      "Тема 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов.",
      "Лекция 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов."
    ]
  },
  {
    "objectID": "algorithmics/lecture-01/index.html#основные-положения-гост-19.701-90",
    "href": "algorithmics/lecture-01/index.html#основные-положения-гост-19.701-90",
    "title": "Лекция 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов.",
    "section": "Основные положения ГОСТ 19.701-90",
    "text": "Основные положения ГОСТ 19.701-90\n\nЦель схемы алгоритма\n\nСхемы предназначены для визуального представления алгоритмов, применяемых в программных системах. Они помогают разработчикам и другим заинтересованным сторонам понять логику работы алгоритма.\n\n\n\nОбщие требования\n\nСхемы должны быть четкими и легко читаемыми. Используемые символы и обозначения должны быть понятны и стандартны.\nОформление схемы должно способствовать интуитивному пониманию алгоритма, избегая излишнего нагромождения элементов.\n\n\n\nСтруктура алгоритмической схемы\n\nНачало и конец: Используются овалы для обозначения начала и конца алгоритма.\nДействия и операции: Прямоугольники представляют собой операции (например, присваивание, вычисление и т.д.).\nСлучаи и условия: Ромб фиксирует условия и ветвления алгоритма, позволяя обозначить различные потоки выполнения в зависимости от условия.\nСоединения: Стрелки направляют поток управления между блоками и показывают последовательность выполнения.\n\n\n\nУнификация символов\n\nВ соответствии с ГОСТ, утверждена унифицированная система символов, которую необходимо использовать при оформлении схем. Это позволяет стандартизировать документацию, делая её более доступной для понимания.",
    "crumbs": [
      "Главная",
      "Алгоритмика",
      "Тема 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов.",
      "Лекция 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов."
    ]
  },
  {
    "objectID": "algorithmics/lecture-01/algorithmics-lecture-01.html#цели-и-задачи",
    "href": "algorithmics/lecture-01/algorithmics-lecture-01.html#цели-и-задачи",
    "title": "Лекция 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов.",
    "section": "Цели и задачи",
    "text": "Цели и задачи\n\nРаскрыть сущность основных понятий, связанных с алгоритмами, их свойствами и способами записи.\nСформировать представление о способах анализа задачи и формулирования последовательности действий для их решения.\nРазвить навыки аналитического мышления при разработке алгоритмов.\nПоказать важность алгоритмов в различных областях науки, техники и повседневной жизни, а также продемонстрировать, как они могут быть представлены в разных формах.\nВоспитывать внимательность, точность и дисциплину при работе с алгоритмами."
  },
  {
    "objectID": "algorithmics/lecture-01/algorithmics-lecture-01.html#рассматриваемые-вопросы",
    "href": "algorithmics/lecture-01/algorithmics-lecture-01.html#рассматриваемые-вопросы",
    "title": "Лекция 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов.",
    "section": "Рассматриваемые вопросы",
    "text": "Рассматриваемые вопросы\n\nПонятие алгоритма.\nИстория понятия алгоритма.\nЧисловые и логические алгоритмы.\nАлгоритмы в юридических процессах и правовых нормах.\nСвойства алгоритмов.\nПринципы разработки алгоритмов.\nМетоды разработки алгоритмов.\nОсновные этапы решения задачи.\nТестирование алгоритма.\nСпособы записи алгоритмов.\nПравила оформления схем алгоритмов.\nЕдиная система программной документации в соответствии с ГОСТ 19.701-90."
  },
  {
    "objectID": "algorithmics/lecture-01/algorithmics-lecture-01.html#понятие-алгоритма",
    "href": "algorithmics/lecture-01/algorithmics-lecture-01.html#понятие-алгоритма",
    "title": "Лекция 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов.",
    "section": "1 Понятие алгоритма",
    "text": "1 Понятие алгоритма\nАлгоритм — это последовательность чётко определённых, конечных и логически упорядоченных шагов, направленных на решение конкретной задачи или достижение определённой цели.\nАлгоритмы лежат в основе математики, информатики, программирования и многих других дисциплин. Они позволяют формализовать процесс преобразования входных данных в выходные, гарантируя корректный результат при соблюдении условий.\n1.1 Пример алгоритма рассмотрения жалобы гражданина\n\nШаг 1. Прием документа.\nШаг 2. Проверка подведомственности.\nШаг 3. Назначение ответственного лица.\nШаг 4. Сроки рассмотрения (30 дней).\nШаг 5. Формирование ответа.\n\n1.2 Структура алгоритма\n\nВвод данных: Получение исходной информации (например, числа, текст, сигналы).\nОбработка данных: Выполнение операций: вычисления, сравнения, ветвления, циклы.\nВывод результата: Предоставление итоговых данных (например, отсортированный список, решение уравнения)."
  },
  {
    "objectID": "algorithmics/lecture-01/algorithmics-lecture-01.html#история-понятия-алгоритма",
    "href": "algorithmics/lecture-01/algorithmics-lecture-01.html#история-понятия-алгоритма",
    "title": "Лекция 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов.",
    "section": "2 История понятия алгоритма",
    "text": "2 История понятия алгоритма\nПонятие алгоритма имеет многовековую историю. От вавилонских глиняных табличек до квантовых компьютеров алгоритмы эволюционировали, отражая развитие человеческого мышления.\nОт клинописных табличек до GPT-4 история алгоритмов — это история поиска порядка в хаосе. Сегодня алгоритмы управляют финансами, правосудием и даже творчеством, но их суть остаётся неизменной: четкая инструкция для достижения цели.\nПонимание их истории помогает не только создавать новые технологии, но и осознанно использовать их в правовом и социальном контексте.\n2.1 Вавилонские алгоритмы (1800–1600 до н.э.)\nВавилоняне использовали алгоритмы для решения многих практических задач.\n\n\n\n\n\nВавилонские глиняные таблички\n\n\n\n\nРасчеты с процентами на глиняных табличках.\nАлгоритм извлечения квадратного корня (метод Герона, позже описанный греками).\n\n\n2.2 Древняя Греция\n2.2.1 Евклид (ок. 300 г. до н.э.)\nДревнегреческий математик, геометр, автор первого из дошедших до нас теоретических трактатов по математике.\n\n\nЕвклид в «Началах» формализовал алгоритм нахождения НОД (наибольшего общего делителя):\nалг НОД(a, b)\nнач\n  пока b &lt;&gt; 0\n    t := b\n    b := a mod b\n    a := t\n  кон\n  вывод a\nкон\n\n\n\n\nЕвклид\n\n\n\n2.3 Исламский Золотой век\n2.3.1 Мухаммада ибн Муса аль-Хорезми (ок. 780–850)\nПерсидский или среднеазиатский учёный IX века из Хорезма, математик, астроном, географ и историк.\n\n\n\n\n\nМухаммад ибн Муса аль-Хорезми\n\n\n\n\nпервым рассматривал алгебру как самостоятельную дисциплину и преподавал ее в элементарной форме;\nразработал подробные тригонометрические таблицы;\nв своих трудах детально описывал пошаговые методы решения уравнений;\nв Европе его имя (латинизированное «Algorithmi») стало основой термина «алгоритм».\n\n\n2.4 Средневековая Европа: XII–XIII века\n2.4.1 Фибоначчи (Леонардо Пизанский)(ок. 1170–1240)\nИтальянский математик, стоявший у истоков европейской математической революции.\n\n\n\nпознакомил Европу с арабскими цифрами (0–9), заменившими римские;\nразработал методы расчета прибыли, конвертации валют и решения практических задач для купцов;\nпопуляризировал алгоритмы для коммерческих расчетов;\nввел в рассмотрение числовой ряд, где каждое число — сумма двух предыдущих: 0, 1, 1, 2, 3, 5, 8, 13…\n\n\n\n\n\nЛеонардо Пизанский\n\n\n\n2.4.2 Раймонд Луллий (1235–1315)\nКаталонский миссионер, поэт, философ и теолог, один из наиболее влиятельных и оригинальных мыслителей европейского высокого Средневековья.\n\n\n\n\n\nРаймонд Луллий\n\n\n\n\nсчитается одним из родоначальников европейской арабистики и комбинаторики;\nодним из первых применил диаграмму связей;\nсоздал механическое устройство для генерации логических комбинаций (прообраз алгоритмического мышления).\n\n\n2.5 Новое время: формализация и универсальность\n2.5.1 Готфрид Лейбниц (21.06.1646–14.11.1716)\nНемецкий философ, логик, математик, механик, физик, юрист, историк, дипломат, изобретатель и языковед.\nОснователь и первый президент Берлинской академии наук, член Лондонского королевского общества (1673), иностранный член Французской академии наук.\n\n\n\nнезависимо от Ньютона создал математический анализ;\nсоздал комбинаторику как науку;\nзаложил основы математической логики;\nописал двоичную систему счисления с цифрами 0 и 1.\n\n\n\n\n\nГотфрид Лейбниц\n\n\n\n2.5.2 Чарльз Бэббидж (26.12.1791–18.10.1871)\nАнглийский математик, считающийся предвестником современных компьютеров.\nИностранный член-корреспондент Императорской академии наук в Санкт-Петербурге (1832). Написал труды по теории функций, механизации счёта в экономике.\n\n\n\n\n\nЧарльз Бэббидж\n\n\n\n\nсоздал первый механический калькулятор для автоматизации расчётов математических таблиц;\nразработал первую в истории концепцию программируемого компьютера с арифметическим устройством, памятью и использованием перфокарт для ввода данных.\n\n\n2.5.3 Ада Лавлейс (10.12.1815–27.11.1852)\nАнглийский математик, первая в истории программист. Дочь поэта Джорджа Байрона, но воспитывалась матерью, которая поощряла её интерес к науке. В 1833 году познакомилась с Чарльзом Бэббиджем, создателем концепции Аналитической машины — прообраза компьютера.\n\n\n\nнаписала первый алгоритм для вычисления чисел Бернулли — это считают первой компьютерной программой;\nразработала алгоритм для вычисления чисел Бернулли с помощью машины Бэббиджа, ставший первой в мире программой;\nпредсказала, что вычислительные устройства смогут работать не только с числами, но и с символами, музыкой и искусством.\n\n\n\n\n\nАда Лавлейс\n\n\n\n2.6 XX век: математизация и компьютерная революция\n2.6.1 Машина Тьюринга\nАлан Тьюринг формализовал алгоритм как последовательность действий, выполняемых абстрактной машиной. Его работа заложила основы теории вычислений.\n\n\n\n\n\nМашина Тьюринга\n\n\n\nПример алгоритма для машины Тьюринга:\nЗадача: Инвертировать биты (0→1, 1→0).\nПравила:\n- Если состояние Q1 и символ 0: пиши 1, двигайся вправо, оставайся в Q1.\n- Если состояние Q1 и символ 1: пиши 0, двигайся вправо, оставайся в Q1.\n\n2.6.2 1950-е: Языки программирования\n\nFORTRAN (1957) и ALGOL (1958) сделали алгоритмы доступными для массовой разработки.\nАлгоритмы сортировки (например, быстрая сортировка Хоара, 1960) стали классикой Computer Science.\n\n2.7 XXI век: алгоритмы как новая реальность\n2.7.1 Big Data и машинное обучение\n\nАлгоритмы PageRank (Google) и нейросетей (DeepMind) изменили подход к обработке информации.\nПример: алгоритм рекомендаций Netflix использует матричную факторизацию для предсказания предпочтений.\n\n2.7.2 Этические вызовы\n\nДискриминация алгоритмов: в 2016 г. система COMPAS (США) была обвинена в расизме при оценке риска рецидива.\nGDPR в ЕС (2018) регулирует автоматизированное принятие решений, требующее «человеческого надзора»."
  },
  {
    "objectID": "algorithmics/lecture-01/algorithmics-lecture-01.html#числовые-и-логические-алгоритмы",
    "href": "algorithmics/lecture-01/algorithmics-lecture-01.html#числовые-и-логические-алгоритмы",
    "title": "Лекция 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов.",
    "section": "3 Числовые и логические алгоритмы",
    "text": "3 Числовые и логические алгоритмы\nЧисловые и логические алгоритмы — это два основных типа алгоритмов, которые используются для решения различных задач в информатике и математике.\nЧисловые и логические алгоритмы играют важную роль в различных областях науки и техники.\nПонимание их различий и сходств позволяет эффективно применять их в зависимости от конкретных задач и требований.\n3.1 Числовые алгоритмы\nЧисловые алгоритмы используются для выполнения расчетов, связанных с количественными данными. Такие алгоритмы могут включать в себя арифметические операции, вычисления, обработку числовых данных и т.д. Они помогают юристам и судам принимать решения на основе точных вычислений.\n3.1.1 Примеры:\n\nОпределение размера алиментов, которые родитель должен выплачивать на содержание ребенка.\nОпределение суммы компенсации, которую работодатель должен выплатить за просрочку зарплаты.\nОпределение суммы неустойки за нарушение условий договора (например, просрочка поставки товара).\nОпределение суммы штрафа за конкретное нарушение ПДД.\nОпределение суммы компенсации при ДТП.\n\n3.2 Логические алгоритмы\nЛогические алгоритмы основаны на последовательности логических операций (например, «если-то», «и», «или») и помогают систематизировать процесс рассуждений. В юриспруденции они используются для анализа условий, проверки соответствия нормам права и принятия решений на основе заданных правил.\n3.2.1 Примеры:\n\nОпределение статьи Уголовного кодекса РФ, по которой следует квалифицировать деяние.\nОпределение, соответствует ли договор требованиям законодательства.\nВыбор суда, который должен рассматривать дело.\nОпределение порядка разрешения трудового спора.\nОпределение наличия оснований для освобождения от уголовной ответственности.\nОпределение права на налоговый вычет.\n\n3.3 Сравнение числовых и логических алгоритмов\n3.3.1 Сходства\n\nОба типа алгоритмов могут быть реализованы в различных языках программирования.\nОба могут использоваться для решения задач и оптимизации процессов.\nОба типа алгоритмов могут быть комбинированы для решения более сложных задач.\n\n3.3.2 Различия\n\nЧисловые алгоритмы фокусируются на числовых данных и их обработке, тогда как логические алгоритмы работают с логическими выражениями и условиями.\nЧисловые алгоритмы часто требуют более сложных математических вычислений, в то время как логические алгоритмы больше ориентированы на принятие решений и управление потоком выполнения программы."
  },
  {
    "objectID": "algorithmics/lecture-01/algorithmics-lecture-01.html#алгоритмы-в-юридических-процессах-и-правовых-нормах",
    "href": "algorithmics/lecture-01/algorithmics-lecture-01.html#алгоритмы-в-юридических-процессах-и-правовых-нормах",
    "title": "Лекция 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов.",
    "section": "4 Алгоритмы в юридических процессах и правовых нормах",
    "text": "4 Алгоритмы в юридических процессах и правовых нормах\nАлгоритмы в юридических процессах и правовых нормах играют все более важную роль в современном правоприменении и правосудии. Они могут использоваться для автоматизации различных аспектов юридической работы, включая анализ документов, предсказание исходов дел, а также для поддержки принятия решений.\nАлгоритмы могут значительно улучшить эффективность юридических процессов, но их использование должно быть тщательно продумано и регулировано, чтобы обеспечить соблюдение правовых норм и защиту прав граждан.\n4.1 Автоматизация рутинных задач\nАлгоритмы могут помочь в автоматизации таких задач, как обработка юридических документов, составление контрактов и управление делами. Это позволяет юристам сосредоточиться на более сложных и творческих аспектах своей работы.\n4.2 Анализ данных\nС помощью алгоритмов можно анализировать большие объемы юридических данных, выявлять закономерности и тенденции, что может быть полезно для подготовки к судебным разбирательствам или для разработки правовой стратегии.\n4.3 Предсказание исходов дел\nНекоторые алгоритмы могут использоваться для предсказания вероятности успеха в судебных разбирательствах на основе анализа предыдущих дел и решений судов. Это может помочь юристам и их клиентам принимать более обоснованные решения.\n4.4 Поддержка принятия решений\nАлгоритмы могут быть интегрированы в системы поддержки принятия решений, которые помогают судьям и адвокатам оценивать различные варианты действий и их последствия.\n4.5 Этика и правовые нормы\nВнедрение алгоритмов в юридическую практику также поднимает важные этические и правовые вопросы. Необходимо учитывать, как алгоритмы могут влиять на справедливость, прозрачность и доступность правосудия. Важно, чтобы алгоритмы были разработаны с учетом правовых норм и принципов, чтобы избежать предвзятости и дискриминации."
  },
  {
    "objectID": "algorithmics/lecture-01/algorithmics-lecture-01.html#свойства-алгоритмов",
    "href": "algorithmics/lecture-01/algorithmics-lecture-01.html#свойства-алгоритмов",
    "title": "Лекция 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов.",
    "section": "5 Свойства алгоритмов",
    "text": "5 Свойства алгоритмов\n5.1 Дискретность\nАлгоритм должен представлять процесс решения задачи как упорядоченное выполнение некоторых простых шагов. При этом для выполнения каждого шага алгоритма требуется конечный отрезок времени, то есть преобразование исходных данных в результат осуществляется во времени дискретно.\n5.2 Детерминированность (определённость)\nВ каждый момент времени следующий шаг работы однозначно определяется состоянием системы. Таким образом, алгоритм выдаёт один и тот же результат (ответ) для одних и тех же исходных данных.\nСуществуют вероятностные алгоритмы, в которых следующий шаг работы зависит от текущего состояния системы и генерируемого случайного числа. Однако при включении метода генерации случайных чисел в список «исходных данных» вероятностный алгоритм становится подвидом обычного.\n5.3 Понятность\nАлгоритм должен включать только те команды, которые доступны исполнителю и входят в его систему команд.\n5.4 Конечность\nАлгоритм должен завершаться за конечное количество шагов. Это означает, что он не должен зацикливаться и должен иметь четко определенные условия завершения.\n5.5 Массовость (общность)\nАлгоритм применим к множеству однотипных задач, а не к одной конкретной. Например, алгоритм сортировки работает для любого набора чисел.\n5.6 Результативность\nАлгоритм должен завершаться определенным результатом (или сообщением об отсутствии решения).\n5.7 Эффективность\nАлгоритм должен быть эффективным как по времени, так и по использованию ресурсов. Это означает минимизацию количества операций и использование оптимальных структур данных.\n5.8 Проверяемость\nАлгоритм должен быть проверяемым, что означает возможность тестирования его корректности и эффективности. Это может включать в себя создание тестовых случаев и использование методов верификации."
  },
  {
    "objectID": "algorithmics/lecture-01/algorithmics-lecture-01.html#принципы-разработки-алгоритмов",
    "href": "algorithmics/lecture-01/algorithmics-lecture-01.html#принципы-разработки-алгоритмов",
    "title": "Лекция 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов.",
    "section": "6 Принципы разработки алгоритмов",
    "text": "6 Принципы разработки алгоритмов\nСовременная юридическая практика всё чаще требует работы с алгоритмами — от анализа договоров до прогнозирования судебных решений.\nПринципы разработки алгоритмов являются основой для создания качественных и эффективных решений.\nСоблюдение этих принципов помогает разработчикам создавать алгоритмы, которые не только решают поставленные задачи, но и делают это оптимальным образом.\nДаже простые алгоритмы на школьном языке помогают юристам: - Избегать арифметических ошибок в расчетах. - Стандартизировать проверку документов. - Соблюдать процессуальные сроки.\nВажно: Все алгоритмы должны сверяться с актуальными редакциями законов.\n6.1 Четкость и детерминированность\nКаждый шаг алгоритма должен быть однозначным и не допускать разночтений.\nПример: Алгоритм проверки дееспособности клиента:\nалг ПроверкаДееспособности\n  нач\n    ввести Возраст, РешениеСуда\n    если Возраст &gt;= 18 и РешениеСудаоНеедеспособности = \"отсутствует\" то\n      вывод \"Дееспособен\"\n    иначе\n      вывод \"Требуется опекун\"\n    все\nкон\n6.2 Эффективность\nАлгоритм должен решать задачу за минимальное время и с разумными затратами ресурсов.\nПример: Поиск судебного прецедента по ключевым словам:\nалг НайтиПрецедент\nнач\n  ввести КлючевыеСлова\n    для каждого дела в БазеДанных\n      если дело.Текст содержит КлючевыеСлова то\n        вывод дело.Номер\n      все\n    кон\nкон\n6.3 Модульность\nРазделяйте алгоритм на независимые блоки (модули). Это упрощает тестирование и повторное использование кода.\nПример: Проверка договора аренды на соответствие ФЗ № 123:\nалг ПроверитьДоговорАренды\nнач\n  ПроверитьСтороны()\n  ПроверитьСрок()\n  ПроверитьОплату()\nкон\nалг ПроверитьСрок\nнач\n  ввести СрокДоговора\n    если СрокДоговора &gt; 5 лет то\n      вывод \"Требуется регистрация в Росреестре\"\n    все\nкон\n6.4 Корректность\nАлгоритм должен давать правильный результат для всех возможных входных данных, включая исключения из правил.\nПример: Расчет неустойки за просрочку платежа (ст. 395 ГК РФ).\nалг РасчетНеустойки\nнач\n  ввести СуммаДолга, СтавкаЦБ, ДниПросрочки\n  если ДниПросрочки &gt; 0 то\n    Неустойка = СуммаДолга * (СтавкаЦБ / 100) * (ДниПросрочки / 365)\n    вывод \"К уплате: \", Неустойка\n  иначе\n    вывод \"Просрочки нет\"\n  все\nкон\n6.5 Простота и читаемость\nИзбегайте избыточной сложности. Алгоритм должен быть понятен даже без комментариев даже новичкам. Используйте говорящие названия переменных и избегайте сложных конструкций.\n\nПлохой примерХороший пример\n\n\n\nНепонятные названия переменных (а, б, 0 вместо логических значений).\nНет пояснения, что проверяется.\n\nалг ПР1\nнач\n  ввод а, б\n  если а &gt;= 18 и б = 0 то\n    вывод \"ДА\"\n  иначе\n    вывод \"НЕТ\"\n  все\nкон\n\n\nЮридическая проверка дееспособности:\n\nНазвания переменных прямо указывают на их смысл.\nУсловие соответствует ст. 21 ГК РФ.\nРезультат содержит юридически значимую формулировку.\n\nалг ПроверкаДееспособности\nнач\n  ввести Возраст, СтатусНедееспособности // Статус: 0 — дееспособен, 1 — недееспособен\n  если Возраст &gt;= 18 и СтатусНедееспособности == 0 то\n    вывод \"Лицо дееспособно: договор действителен\"\n  иначе\n    вывод \"Требуется согласие опекуна или суда\"\n  все\nкон\n\n\n\n6.6 Адаптивность\nАлгоритм должен легко модифицироваться при изменении условий.\nПример: После изменения НДС с 20% до 22%:\nалг РасчетНДС\nнач\n  // Раньше: Ставка = 20\n  Ставка = 22\n  ввести Сумма\n  НДС = Сумма * Ставка / 100\n  вывод НДС\nкон\n6.7 Тестируемость\nРазрабатывайте алгоритм так, чтобы каждый этап можно было проверить.\nПример: Тест для алгоритма раздела имущества (ст. 38 СК РФ)**:\nалг РазделИмущества\nнач\n  ввести СтатусИмущества\n  если СтатусИмущества = \"совместное\" то\n    вывод \"Раздел 50/50\"\n  иначе\n    вывод \"Имущество не делится\"\n  все\nкон\nТест-кейсы:\n\nСтатус = “совместное”. Ожидаемый результат: “50/50”\nСтатус = “наследство”. Ожидаемый результат: “не делится”\n\n6.8 Прозрачность (интерпретируемость результатов)\nАлгоритм должен позволять объяснить результат (важно для GDPR и ФЗ-152).\nПример: Отказ в кредите с указанием причины:\nалг ПроверкаКредита\nнач\n  ввести КредитнаяИстория, Зарплата\n  если КредитнаяИстория = \"плохая\" то\n    вывод \"Отказ: плохая кредитная история\"\n  иначе если Зарплата &lt; 20000 то\n    вывод \"Отказ: недостаточный доход\"\n  иначе\n    вывод \"Одобрено\"\n  все\nкон"
  },
  {
    "objectID": "algorithmics/lecture-01/algorithmics-lecture-01.html#методы-разработки-алгоритмов",
    "href": "algorithmics/lecture-01/algorithmics-lecture-01.html#методы-разработки-алгоритмов",
    "title": "Лекция 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов.",
    "section": "7 Методы разработки алгоритмов",
    "text": "7 Методы разработки алгоритмов\nМетоды разработки алгоритмов предоставляют разработчикам инструменты и техники для создания эффективных решений.\nЭти методы могут варьироваться в зависимости от сложности задачи, требований к производительности и других факторов. Рассмотрим основные методы разработки алгоритмов.\nВыбор подходящего метода зависит от конкретной задачи, требований к производительности и других факторов.\nПонимание различных методов разработки алгоритмов позволяет разработчикам более эффективно решать задачи и оптимизировать свои решения\n7.1 Метод «разделяй и властвуй»\nМетод «разделяй и властвуй» заключается в разбиении сложной задачи на более простые подзадачи, которые решаются независимо друг от друга. После решения подзадач результаты комбинируются для получения окончательного решения. Примеры алгоритмов, использующих этот метод, включают быструю сортировку и алгоритм Краскала для нахождения минимального остовного дерева.\n7.2 Итеративный метод\nИтеративный метод основывается на повторении определенных шагов до достижения желаемого результата. Этот подход часто используется в численных методах, таких как метод Ньютона для нахождения корней уравнений. Итеративные алгоритмы могут быть более эффективными в некоторых случаях, чем рекурсивные.\n7.3 Рекурсивный метод\nРекурсия — это метод, при котором функция вызывает саму себя для решения подзадачи. Данный подход часто используется для решения задач, которые могут быть разбиты на более мелкие аналогичные задачи, таких как вычисление факториала или обход деревьев. Важно учитывать, что рекурсивные алгоритмы могут потребовать больше памяти из-за хранения контекста вызовов.\n7.4 Жадный метод\nЖадные алгоритмы принимают локально оптимальные решения на каждом шаге с надеждой, что это приведет к глобально оптимальному решению. Этот метод часто используется в задачах оптимизации, таких как задача о рюкзаке или алгоритмы для нахождения минимального остовного дерева.\n7.5 Динамическое программирование\nДинамическое программирование — это метод, который используется для решения задач, которые могут быть разбиты на перекрывающиеся подзадачи. Он сохраняет результаты уже решенных подзадач, чтобы избежать повторных вычислений. Этот метод часто применяется в задачах, связанных с оптимизацией, таких как задача о наибольшей общей подпоследовательности.\n7.6 Алгоритмы перебора\nАлгоритмы перебора (или «грубой силы») исследуют все возможные варианты решения задачи. Хотя этот метод может быть неэффективным для больших наборов данных, он может быть полезен для небольших задач или в случаях, когда другие методы не применимы.\n7.7 Метод проб и ошибок\nЭтот метод включает в себя экспериментирование с различными подходами и анализ результатов. Он может быть полезен в ситуациях, когда нет четкого понимания структуры задачи или когда требуется интуитивный подход к решению."
  },
  {
    "objectID": "algorithmics/lecture-01/algorithmics-lecture-01.html#основные-этапы-решения-задачи",
    "href": "algorithmics/lecture-01/algorithmics-lecture-01.html#основные-этапы-решения-задачи",
    "title": "Лекция 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов.",
    "section": "8 Основные этапы решения задачи",
    "text": "8 Основные этапы решения задачи\nРазработка и реализация алгоритма для решения задачи включает в себя несколько ключевых этапов, которые помогают структурировать процесс и обеспечить эффективность конечного решения.\nСледование этим этапам помогает разработчикам структурировать процесс, минимизировать ошибки и оптимизировать конечный продукт.\nПонимание и применение этих этапов в практике разработки алгоритмов способствует улучшению качества и надежности программного обеспечения.\nРассмотрим основные этапы решения задачи при разработке алгоритма.\n8.1 Анализ задачи\nНа этом этапе необходимо тщательно изучить условия задачи, определить ее цели и требования. Важно понять, какие данные доступны, какие результаты ожидаются и какие ограничения могут существовать. Анализ задачи помогает сформулировать четкое представление о том, что необходимо достичь.\n8.2 Определение входных и выходных данных\nПосле анализа задачи следует определить, какие данные будут входными (например, параметры, которые алгоритм будет принимать) и какие данные будут выходными (результаты, которые алгоритм должен возвращать). Четкое определение входных и выходных данных помогает избежать недоразумений и упрощает дальнейшую разработку.\n8.3 Разработка алгоритма\nНа этом этапе происходит непосредственное создание алгоритма. Разработчик выбирает подходящие методы и техники, основываясь на анализе задачи и определении данных. Алгоритм может быть представлен в виде псевдокода, блок-схемы или другого формата, который позволяет четко описать последовательность шагов.\n8.4 Тестирование и отладка\nПосле разработки алгоритма необходимо провести его тестирование. Это включает в себя проверку корректности работы алгоритма на различных входных данных, а также выявление и исправление возможных ошибок. Тестирование помогает убедиться, что алгоритм работает так, как задумано, и соответствует требованиям задачи.\n8.5 Оценка эффективности\nНа этом этапе важно оценить эффективность алгоритма с точки зрения времени выполнения и использования ресурсов. Разработчик может провести анализ сложности алгоритма, чтобы понять, насколько он оптимален для решения поставленной задачи. Если алгоритм неэффективен, может потребоваться его доработка или выбор другого метода.\n8.6 Документирование\nСоздание документации является важным этапом, который часто упускается из виду. Документация должна содержать описание алгоритма, его входных и выходных данных, а также примеры использования. Это поможет другим разработчикам понять алгоритм и использовать его в своих проектах.\n8.7 Поддержка и обновление\nПосле внедрения алгоритма в систему важно обеспечить его поддержку и обновление. Это может включать в себя исправление ошибок, улучшение производительности или адаптацию к изменяющимся требованиям. Поддержка алгоритма помогает сохранить его актуальность и эффективность на протяжении времени."
  },
  {
    "objectID": "algorithmics/lecture-01/algorithmics-lecture-01.html#тестирование-алгоритма",
    "href": "algorithmics/lecture-01/algorithmics-lecture-01.html#тестирование-алгоритма",
    "title": "Лекция 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов.",
    "section": "9 Тестирование алгоритма",
    "text": "9 Тестирование алгоритма\nТестирование алгоритмов — это важный этап в процессе разработки, который позволяет убедиться в корректности и эффективности алгоритма.\nОно включает в себя проверку работы алгоритма на различных входных данных, выявление ошибок и оценку его производительности.\nСледование систематическому подходу к тестированию, включая разработку тестовых случаев, автоматизацию и оценку производительности, позволяет разработчикам создавать надежные и высококачественные алгоритмы.\nРассмотрим основные аспекты тестирования алгоритмов.\n9.1 Цели тестирования алгоритмов\nОсновные цели тестирования алгоритмов включают: - Проверка корректности: Убедиться, что алгоритм возвращает правильные результаты для всех возможных входных данных. - Выявление ошибок: Найти и исправить ошибки, которые могут возникнуть в процессе выполнения алгоритма. - Оценка производительности: Измерить время выполнения и использование ресурсов, чтобы определить, насколько алгоритм эффективен.\n9.2 Подходы к тестированию\nСуществует несколько подходов к тестированию алгоритмов: - Модульное тестирование: Проверка отдельных компонентов алгоритма на корректность. Это позволяет изолировать ошибки и упростить процесс отладки. - Интеграционное тестирование: Проверка взаимодействия различных компонентов алгоритма. Это важно для выявления проблем, которые могут возникнуть при совместной работе нескольких частей. - Системное тестирование: Полное тестирование алгоритма в контексте всей системы, чтобы убедиться, что он работает корректно в реальных условиях.\n9.3 Тестовые случаи\nДля эффективного тестирования необходимо разработать тестовые случаи, которые охватывают различные сценарии использования алгоритма. Тестовые случаи могут включать: - Обычные случаи: Стандартные входные данные, для которых алгоритм должен работать корректно. - Граничные случаи: Входные данные, находящиеся на границах допустимых значений, чтобы проверить, как алгоритм справляется с крайними условиями. - Некорректные данные: Входные данные, которые не соответствуют ожидаемым требованиям, чтобы убедиться, что алгоритм обрабатывает ошибки корректно.\n9.4 Автоматизация тестирования\nАвтоматизация тестирования может значительно упростить процесс и повысить его эффективность. С помощью автоматизированных тестов можно быстро проверять алгоритм на различных входных данных и выявлять ошибки. Это особенно полезно при внесении изменений в алгоритм, так как позволяет быстро убедиться, что новые изменения не нарушили его работу.\n9.5 Оценка производительности\nПомимо проверки корректности, важно также оценить производительность алгоритма. Это включает в себя: - Анализ временной сложности: Оценка времени выполнения алгоритма в зависимости от размера входных данных. - Анализ пространственной сложности: Оценка объема памяти, который использует алгоритм.\n9.6 Документация результатов тестирования\nДокументация результатов тестирования является важным аспектом, который помогает команде разработчиков понять, какие тесты были проведены, какие ошибки были выявлены и как они были исправлены. Это также может быть полезно для будущих разработок и улучшений алгоритма."
  },
  {
    "objectID": "algorithmics/lecture-01/algorithmics-lecture-01.html#способы-записи-алгоритмов",
    "href": "algorithmics/lecture-01/algorithmics-lecture-01.html#способы-записи-алгоритмов",
    "title": "Лекция 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов.",
    "section": "10 Способы записи алгоритмов",
    "text": "10 Способы записи алгоритмов\nЗапись алгоритмов — это важный аспект разработки, который позволяет четко и однозначно представить последовательность действий для решения задачи.\nВыбор способа записи алгоритма зависит от целей разработки, аудитории и сложности задачи.\nПонимание различных способов записи алгоритмов помогает разработчикам эффективно коммуницировать свои идеи и создавать качественные решения.\nСуществует несколько способов записи алгоритмов, каждый из которых имеет свои преимущества и недостатки.\nРассмотрим основные способы записи алгоритмов.\n10.1 Псевдокод\nПсевдокод — это способ записи алгоритма с использованием простого и понятного языка, который не привязан к конкретному языку программирования. Он позволяет описать логику алгоритма в виде последовательности шагов, используя обычные слова и конструкции. Преимущества псевдокода включают: - Легкость понимания: Псевдокод понятен даже тем, кто не знаком с конкретным языком программирования. - Гибкость: Можно использовать любые конструкции, которые помогают лучше объяснить алгоритм.\n10.2 Блок-схемы\nБлок-схемы — это графическое представление алгоритма, где каждый шаг представлен в виде блока, а связи между шагами — стрелками. Блок-схемы позволяют визуально отобразить логику алгоритма и его структуру. Преимущества блок-схем включают: - Наглядность: Легко увидеть общую структуру алгоритма и его последовательность. - Удобство для презентации: Блок-схемы хорошо подходят для демонстрации алгоритма другим людям.\n10.3 Язык программирования\nАлгоритм можно записать непосредственно на языке программирования, который будет использоваться для его реализации. Это позволяет сразу увидеть, как алгоритм будет работать в коде. Преимущества записи на языке программирования: - Точность: Код на языке программирования является точным и может быть сразу выполнен. - Возможность тестирования: Можно сразу протестировать алгоритм на практике.\n10.4 Таблицы\nТаблицы могут использоваться для представления алгоритмов, особенно когда необходимо показать взаимосвязи между данными или состояниями. В таблицах можно описать входные данные, выходные данные и шаги алгоритма.\nПреимущества таблиц: - Удобство для представления больших объемов данных. - Легкость в сравнении различных вариантов алгоритма.\n10.5 Формальные нотации\nСуществуют формальные нотации, такие как нотация Бэкуса-Наура (BNF) или другие математические формализмы, которые используются для описания алгоритмов и языков программирования.\nПреимущества формальных нотаций: - Точность: Формальные нотации обеспечивают строгую и однозначную запись. - Подходят для теоретических исследований и анализа."
  },
  {
    "objectID": "algorithmics/lecture-01/algorithmics-lecture-01.html#правила-оформления-схем-алгоритмов",
    "href": "algorithmics/lecture-01/algorithmics-lecture-01.html#правила-оформления-схем-алгоритмов",
    "title": "Лекция 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов.",
    "section": "11 Правила оформления схем алгоритмов",
    "text": "11 Правила оформления схем алгоритмов\nОформление схем алгоритмов — это важный аспект документации в программировании, позволяющий четко и однозначно представить структуру и логику работы алгоритма.\nВ России правила оформления документации для программного обеспечения и алгоритмов регламентированы стандартами, в частности, ГОСТ Р 19.701-90 «Единая система программной документации. Схемы алгоритмов».\nСоблюдение правил оформления схем алгоритмов в соответствии с ГОСТ 19.701-90 играет важную роль в создании программной документации.\nОно обеспечивает универсальность, понятность и точность передачи информации о разработанных алгоритмах, что способствует эффективному взаимодействию между разработчиками, тестировщиками и другими заинтересованными сторонами.\nРассмотрим основные положения и требования этого ГОСТа."
  },
  {
    "objectID": "algorithmics/lecture-01/algorithmics-lecture-01.html#основные-положения-гост-19.701-90",
    "href": "algorithmics/lecture-01/algorithmics-lecture-01.html#основные-положения-гост-19.701-90",
    "title": "Лекция 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов.",
    "section": "12 Основные положения ГОСТ 19.701-90",
    "text": "12 Основные положения ГОСТ 19.701-90\n12.1 Цель схемы алгоритма\n\nСхемы предназначены для визуального представления алгоритмов, применяемых в программных системах. Они помогают разработчикам и другим заинтересованным сторонам понять логику работы алгоритма.\n\n12.2 Общие требования\n\nСхемы должны быть четкими и легко читаемыми. Используемые символы и обозначения должны быть понятны и стандартны.\nОформление схемы должно способствовать интуитивному пониманию алгоритма, избегая излишнего нагромождения элементов.\n\n12.3 Структура алгоритмической схемы\n\nНачало и конец: Используются овалы для обозначения начала и конца алгоритма.\nДействия и операции: Прямоугольники представляют собой операции (например, присваивание, вычисление и т.д.).\nСлучаи и условия: Ромб фиксирует условия и ветвления алгоритма, позволяя обозначить различные потоки выполнения в зависимости от условия.\nСоединения: Стрелки направляют поток управления между блоками и показывают последовательность выполнения.\n\n12.4 Унификация символов\n\nВ соответствии с ГОСТ, утверждена унифицированная система символов, которую необходимо использовать при оформлении схем. Это позволяет стандартизировать документацию, делая её более доступной для понимания."
  },
  {
    "objectID": "algorithmics/exam.html",
    "href": "algorithmics/exam.html",
    "title": "Экзамен",
    "section": "",
    "text": "Понятие алгоритма. Свойства алгоритмов.\nСпособы записи алгоритмов. Определение задач применения алгоритма по блок-схеме.\nНепосредственное и программное управление исполнителем. Линейные программы.\nАлгоритмические конструкции, связанные с проверкой условий.\nОпределение по выбранному методу решения задачи, какие алгоритмические конструкции могут войти в алгоритм.\nПонятие простой величины. Типы величин: целые, вещественные, символьные, строковые, логические.\nПеременные и константы. Алгоритм работы с величинами. Анализ изменения\nЗначения величин при пошаговом выполнении алгоритма.\nКонструирование алгоритмов. Рекурсия.\nУправление, управляющая и управляемая системы, прямая и обратная связь. Алгоритмы управления.",
    "crumbs": [
      "Главная",
      "Алгоритмика",
      "Экзамен"
    ]
  },
  {
    "objectID": "algorithmics/exam.html#темы-для-подготовки-к-экзамену",
    "href": "algorithmics/exam.html#темы-для-подготовки-к-экзамену",
    "title": "Экзамен",
    "section": "",
    "text": "Понятие алгоритма. Свойства алгоритмов.\nСпособы записи алгоритмов. Определение задач применения алгоритма по блок-схеме.\nНепосредственное и программное управление исполнителем. Линейные программы.\nАлгоритмические конструкции, связанные с проверкой условий.\nОпределение по выбранному методу решения задачи, какие алгоритмические конструкции могут войти в алгоритм.\nПонятие простой величины. Типы величин: целые, вещественные, символьные, строковые, логические.\nПеременные и константы. Алгоритм работы с величинами. Анализ изменения\nЗначения величин при пошаговом выполнении алгоритма.\nКонструирование алгоритмов. Рекурсия.\nУправление, управляющая и управляемая системы, прямая и обратная связь. Алгоритмы управления.",
    "crumbs": [
      "Главная",
      "Алгоритмика",
      "Экзамен"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "О сайте",
    "section": "",
    "text": "Этот сайт — ваш надежный ресурс для освоения ключевых компетенций в области Legaltech. Здесь собраны все (ну или почти все) учебные материалы, необходимые для успешного прохождения программы профессиональной переподготовки, разработанной Цифровой кафедрой МГЮА Московского государственного юридического университета имени О.Е. Кутафина (МГЮА) совместно с Университетом «Иннополис;raquo"
  },
  {
    "objectID": "algorithmics/annotation.html",
    "href": "algorithmics/annotation.html",
    "title": "Аннотация учебной дисциплины",
    "section": "",
    "text": "изучение базовых алгоритмических решений и классификаций алгоритмов;\nразвитие алгоритмического мышления.",
    "crumbs": [
      "Главная",
      "Алгоритмика",
      "Аннотация"
    ]
  },
  {
    "objectID": "algorithmics/annotation.html#цель-реализации-программы-дисциплины",
    "href": "algorithmics/annotation.html#цель-реализации-программы-дисциплины",
    "title": "Аннотация учебной дисциплины",
    "section": "",
    "text": "изучение базовых алгоритмических решений и классификаций алгоритмов;\nразвитие алгоритмического мышления.",
    "crumbs": [
      "Главная",
      "Алгоритмика",
      "Аннотация"
    ]
  },
  {
    "objectID": "algorithmics/annotation.html#планируемые-результаты-обучения",
    "href": "algorithmics/annotation.html#планируемые-результаты-обучения",
    "title": "Аннотация учебной дисциплины",
    "section": "Планируемые результаты обучения:",
    "text": "Планируемые результаты обучения:\nПо итогам освоения дисциплины (модуля) обучающийся приобретает способности:\n\nпонимать смысл понятия «алгоритм» и широту сферы его применения; анализировать предлагаемые последовательности команд на предмет наличия у них таких свойств алгоритма как дискретность, детерминированность, понятность, результативность, массовость;\nоперировать алгоритмическими конструкциями «следование», «ветвление», «цикл» (подбирать алгоритмическую конструкцию, соответствующую той или иной ситуации; переходить от записи алгоритмической конструкции на алгоритмическом языке к блок-схеме и обратно);\nопределять по блок-схеме, для решения какой задачи предназначен данный алгоритм;\nанализировать изменение значений величин при пошаговом выполнении алгоритма;\nисполнять линейный алгоритм для формального исполнителя с заданной системой команд;\nсоставлять линейные алгоритмы, число команд в которых не превышает заданное;\nиспользовать доступный опыт других разработчиков;\nисполнять записанный на естественном языке алгоритм, обрабатывающий цепочки символов;\nопределять по выбранному методу решения задачи, какие алгоритмические конструкции могут войти в алгоритм;\nосуществлять разбиение исходной задачи на подзадачи;\nсравнивать различные алгоритмы решения одной задачи;\nисполнять готовые алгоритмы для конкретных исходных данных;\nпреобразовывать запись алгоритма с одной формы в другую;\nстроить цепочки команд, дающих нужный результат при конкретных исходных данных для исполнителя арифметических действий;\nстроить цепочки команд, дающих нужный результат при конкретных исходных данных для исполнителя, преобразующего строки символов;\nстроить арифметические, строковые, логические выражения и вычислять их значения.",
    "crumbs": [
      "Главная",
      "Алгоритмика",
      "Аннотация"
    ]
  },
  {
    "objectID": "algorithmics/annotation.html#оценка-качества-освоения-дисциплины",
    "href": "algorithmics/annotation.html#оценка-качества-освоения-дисциплины",
    "title": "Аннотация учебной дисциплины",
    "section": "Оценка качества освоения дисциплины",
    "text": "Оценка качества освоения дисциплины\nОценка качества освоения дисциплины по дисциплине «Алгоритмика» подразумевает три формы: текущий контроль, рубежный контроль и промежуточный контроль успеваемости.\nТекущий контроль заключается в проверке домашних заданий, выполняемых слушателями к каждому практическому занятию.\nРубежный контроль проводится в течение семестра в форме письменного теста или электронного тестирования.\nПромежуточный контроль успеваемости по дисциплине проводится на зачете и экзамене.\nДля успешной сдачи зачета и экзамена слушателю необходимо:\n\nпройти промежуточный и итоговый ассесмент (проверку) Университета «Иннополис»;\nвыполнить задание по созданию алгоритма под конкретную задачу.",
    "crumbs": [
      "Главная",
      "Алгоритмика",
      "Аннотация"
    ]
  },
  {
    "objectID": "algorithmics/credit.html",
    "href": "algorithmics/credit.html",
    "title": "Зачет",
    "section": "",
    "text": "Понятие алгоритма.\nСвойства алгоритмов.\nСпособы записи алгоритмов.\nОпределение задач применения алгоритма по блок-схеме.\nНепосредственное и программное управление исполнителем.\nЛинейные программы.\nАлгоритмические конструкции, связанные с проверкой условий.\nОпределение по выбранному методу решения задачи, какие алгоритмические конструкции могут войти в алгоритм.",
    "crumbs": [
      "Главная",
      "Алгоритмика",
      "Зачет"
    ]
  },
  {
    "objectID": "algorithmics/credit.html#темы-для-подготовки-к-зачету",
    "href": "algorithmics/credit.html#темы-для-подготовки-к-зачету",
    "title": "Зачет",
    "section": "",
    "text": "Понятие алгоритма.\nСвойства алгоритмов.\nСпособы записи алгоритмов.\nОпределение задач применения алгоритма по блок-схеме.\nНепосредственное и программное управление исполнителем.\nЛинейные программы.\nАлгоритмические конструкции, связанные с проверкой условий.\nОпределение по выбранному методу решения задачи, какие алгоритмические конструкции могут войти в алгоритм.",
    "crumbs": [
      "Главная",
      "Алгоритмика",
      "Зачет"
    ]
  },
  {
    "objectID": "algorithmics/index.html",
    "href": "algorithmics/index.html",
    "title": "Алгоритмика",
    "section": "",
    "text": "Аннотация учебной дисциплины \nТема 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов.\nТема 2. Управление исполнителем. Управляющие алгоритмические конструкции.\nТема 3. Основные управляющие алгоритмические конструкции. Разветвляющиеся и циклические алгоритмические конструкции.\nТема 4. Данные и величины. Свойства и характеристики величин.\nТема 5. Сложные алгоритмы. Понятие вспомогательного алгоритма. Рекурсия. Алгоритмы управления.\nМетодические материалы для подготовки к зачету\nМетодические материалы для подготовки к экзамену\nТест для подготовки к ассесменту",
    "crumbs": [
      "Главная",
      "Алгоритмика"
    ]
  },
  {
    "objectID": "algorithmics/index.html#содержание-учебного-модуля",
    "href": "algorithmics/index.html#содержание-учебного-модуля",
    "title": "Алгоритмика",
    "section": "",
    "text": "Аннотация учебной дисциплины \nТема 1. Понятие алгоритма. Свойства алгоритмов. Способы записи алгоритмов.\nТема 2. Управление исполнителем. Управляющие алгоритмические конструкции.\nТема 3. Основные управляющие алгоритмические конструкции. Разветвляющиеся и циклические алгоритмические конструкции.\nТема 4. Данные и величины. Свойства и характеристики величин.\nТема 5. Сложные алгоритмы. Понятие вспомогательного алгоритма. Рекурсия. Алгоритмы управления.\nМетодические материалы для подготовки к зачету\nМетодические материалы для подготовки к экзамену\nТест для подготовки к ассесменту",
    "crumbs": [
      "Главная",
      "Алгоритмика"
    ]
  },
  {
    "objectID": "annotation.html",
    "href": "annotation.html",
    "title": "О программе профессиональной подготовки",
    "section": "",
    "text": "Дополнительная профессиональная программа профессиональной переподготовки ИТ-профиля (далее – Программа) предназначена для обучающихся по специальностям и направлениям подготовки, не отнесенным к ИТ-сфере.\nЦелью образовательной программы является получение актуальной для отрасли «Социальная сфера» дополнительной ИТ–квалификации «менеджер по информационным технологиям».\nВ рамках программы запланировано формирование дополнительных цифровых компетенций в области создания алгоритмов и программ, пригодных для практического применения, в том числе компетенций, необходимых для работы в качестве одного из участников команды разработки программного обеспечения в сфере автоматизации юридических процессов. Программа предназначена для тех, кто стремится повысить свои профессиональные компетенции и получить дополнительную квалификацию, позволяющую сочетать свои специальные знания, полученные в результате освоения основной образовательной программы, и знания и навыки в сфере информационных технологий.",
    "crumbs": [
      "Главная",
      "О программе"
    ]
  },
  {
    "objectID": "annotation.html#цели-реализации-программы",
    "href": "annotation.html#цели-реализации-программы",
    "title": "О программе профессиональной подготовки",
    "section": "",
    "text": "Дополнительная профессиональная программа профессиональной переподготовки ИТ-профиля (далее – Программа) предназначена для обучающихся по специальностям и направлениям подготовки, не отнесенным к ИТ-сфере.\nЦелью образовательной программы является получение актуальной для отрасли «Социальная сфера» дополнительной ИТ–квалификации «менеджер по информационным технологиям».\nВ рамках программы запланировано формирование дополнительных цифровых компетенций в области создания алгоритмов и программ, пригодных для практического применения, в том числе компетенций, необходимых для работы в качестве одного из участников команды разработки программного обеспечения в сфере автоматизации юридических процессов. Программа предназначена для тех, кто стремится повысить свои профессиональные компетенции и получить дополнительную квалификацию, позволяющую сочетать свои специальные знания, полученные в результате освоения основной образовательной программы, и знания и навыки в сфере информационных технологий.",
    "crumbs": [
      "Главная",
      "О программе"
    ]
  },
  {
    "objectID": "annotation.html#задачи-программы",
    "href": "annotation.html#задачи-программы",
    "title": "О программе профессиональной подготовки",
    "section": "Задачи программы",
    "text": "Задачи программы\n\nповышение профессиональных навыков в области информационных технологий;\nвыработка навыков совместной работы со специалистами в сфере информационных технологий по созданию программного обеспечения;\nвыработка практических навыков информационно-поисковой деятельности, направленных на совершенствование профессиональных умений в области информационных технологий;\nпрактическое применение принципов и основ алгоритмизации;\nприобретение слушателями навыков использования результатов моделирования и анализа бизнес-процессов для принятия стратегических и оперативных управленческих решений.\n\nПрограмма предназначена для тех, кто стремится повысить свою профессиональную компетенцию и получить дополнительную квалификацию, позволяющую сочетать свои специальные знания, полученные в результате освоения основной образовательной программы, и знания и навыки в сфере информационных технологий.",
    "crumbs": [
      "Главная",
      "О программе"
    ]
  },
  {
    "objectID": "annotation.html#актуальность-и-уникальность-программы",
    "href": "annotation.html#актуальность-и-уникальность-программы",
    "title": "О программе профессиональной подготовки",
    "section": "Актуальность и уникальность программы",
    "text": "Актуальность и уникальность программы\nИзменения в обществе связанные с развитием информационных технологий приводят к резкому увеличению потребности в менеджерах по управлению сервисами ИT. Менеджер по информационным технологиям сейчас и в ближайшем будущем имеет большие возможности для трудоустройства и карьерного роста в этой области.",
    "crumbs": [
      "Главная",
      "О программе"
    ]
  },
  {
    "objectID": "annotation.html#формы-обучения-и-материалы",
    "href": "annotation.html#формы-обучения-и-материалы",
    "title": "О программе профессиональной подготовки",
    "section": "Формы обучения и материалы",
    "text": "Формы обучения и материалы\nПрограмма сочетает теорию и практику, а материалы структурированы для максимально эффективного погружения:\n\nЛекции — видеозаписи, презентации и конспекты по основам автоматизации юридической деятельности.\nСеминарские занятия — интерактивные кейсы, шаблоны решений и рекомендации по работе с Legaltech-инструментами.\nДистанционная практика/стажировка — гайды, чек-листы и примеры проектов для отработки навыков в реальных условиях.\nЗащита проекта — методические указания, образцы документов и критерии оценки финальной работы.\nЗачеты и экзамены — тесты, практические задания и примеры вопросов для самоподготовки.",
    "crumbs": [
      "Главная",
      "О программе"
    ]
  },
  {
    "objectID": "annotation.html#объем-и-сроки-реализации-программы",
    "href": "annotation.html#объем-и-сроки-реализации-программы",
    "title": "О программе профессиональной подготовки",
    "section": "Объем и сроки реализации программы",
    "text": "Объем и сроки реализации программы\n\nОбъем: 398 академических часов.\nПродолжительность: 9 месяцев.\nФормат: очный и дистанционный.",
    "crumbs": [
      "Главная",
      "О программе"
    ]
  },
  {
    "objectID": "annotation.html#требования-к-поступающим",
    "href": "annotation.html#требования-к-поступающим",
    "title": "О программе профессиональной подготовки",
    "section": "Требования к поступающим",
    "text": "Требования к поступающим\nК обучению по Программе допускаются лица, обучающиеся по очной, очно-заочной форме за счет бюджетных средств или по договорам об оказании платных образовательных услуг, освоившие часть основной профессиональной образовательной программы высшего образования бакалавриата – в объеме не менее 60 зачетных единиц (бакалавры 2-го курса), освоившие часть основной профессиональной образовательной программы высшего образования специалитета - в объеме не менее 120 зачетных единиц (специалисты 2-го курса), а также обучающиеся по программам магистратуры, которые не относятся к ИТ-профилю, по специальностям и направлениям подготовки в отрасли экономики &laqou;Социальная сфера&raqou;.\nК освоению программы допускаются обучающиеся очной, очно-заочной форм обучения. По результатам прохождения базового курса &laqou;Введение в автоматизацию юридических процессов&raqou; слушатели распределяются в следующие группы:\n\nцелевая группа 1 – базовая подготовка;\nцелевая группа 2 – продвинутая подготовка.\n\nПодать заявку на обучение можно на странице «Цифровой кафедры».",
    "crumbs": [
      "Главная",
      "О программе"
    ]
  },
  {
    "objectID": "annotation.html#квалификационная-характеристика-выпускника.",
    "href": "annotation.html#квалификационная-характеристика-выпускника.",
    "title": "О программе профессиональной подготовки",
    "section": "Квалификационная характеристика выпускника.",
    "text": "Квалификационная характеристика выпускника.\nВыпускникам Программы присваивается дополнительная ИТ-квалификация в области управления внедрением, предоставлением, использованием и развитием цифровых и информационных технологий в юридической деятельности (отрасль &laqou;Социальная сфера&raqou;, согласно «Требованиям к содержанию и оформлению дополнительных профессиональных программ (программ профессиональной переподготовки) и ИТ-модулей в рамках предусматривающих получение нескольких квалификаций основных программ высшего образования, реализуемых на &laqou;цифровых кафедрах&raqou; образовательными организациями высшего образования, участвующих в программе стратегического академического лидерства &laqou;Приоритет-2030&raqou;)&raquo.\nВыпускник Программы будет готов к выполнению трудовой деятельности, связанной с использованием вычислительной техники и информационных технологий (код ОКВЭД – 62.09, согласно Профессионального стандарта &laqou;Менеджер по информационным технологиям&raqou;, утв. Приказом Министерства труда и социальной защиты РФ от 30 августа 2021 г. N 588н «Об утверждении профессионального стандарта &laqou;Менеджер по информационным технологиям&raqou;) в качестве менеджера по информационным технологиям.\nКвалификационный уровень по национальной рамке квалификаций: 6.\n\nПрофессиональные задачи\nОбучающийся, освоивший дополнительную профессиональную программу, должен быть готов решать следующие профессиональные задачи:\n\nпроектная деятельность:\n\nпроведение обследования прикладной области в соответствии с профилем подготовки: сбор детальной информации для формализации требований пользователей заказчика, интервьюирование ключевых сотрудников заказчика;\nформирование требований к информатизации и автоматизации прикладных процессов, формализация предметной области проекта;\nмоделирование прикладных и информационных процессов, описание реализации информационного обеспечения прикладных задач;\nсоставление технического задания на разработку информационной системы; проектирование информационных систем в соответствии со спецификой профиля подготовки по видам обеспечения (программное, информационное, организационное, техническое);\nучастие в проведении переговоров с заказчиком и выявление его информационных потребностей;\n\nорганизационно-управленческая деятельность:\n\nучастие в проведении переговоров с заказчиком и презентация проектов;\nкоординация работ по созданию, адаптации и сопровождению информационной системы;\nучастие в организации работ по управлению проектом информационных систем;\nучастие в управлении бизнес-процессами, основанном на их анализе и моделировании;\nвзаимодействие с заказчиком в процессе реализации проекта;\n\nаналитическая деятельность:\n\nанализ и выбор проектных решений по созданию и модификации информационных систем;\nоценка рисков проектных решений, эффективности информационной системы.",
    "crumbs": [
      "Главная",
      "О программе"
    ]
  },
  {
    "objectID": "annotation.html#планируемые-результаты-освоения-программы",
    "href": "annotation.html#планируемые-результаты-освоения-программы",
    "title": "О программе профессиональной подготовки",
    "section": "Планируемые результаты освоения программы",
    "text": "Планируемые результаты освоения программы\nВыпускник, освоивший образовательную программу «Автоматизация юридических процессов», должен обладать компетенциями, соответствующими виду (видам) профессиональной деятельности, на который (которые) ориентирована программа:\n\nОбщие профессиональные компетенции:\n\nспособность использовать нормативно-правовые документы, международные и отечественные стандарты в области информационных систем и технологий;\nспособность анализировать социально-экономические задачи и процессы с\nприменение методов системного анализа;\nспособность разрабатывать алгоритмы;\nспособность проводить анализ и моделирование бизнес-процессов.\n\n\n\nПрофессиональные компетенции:\n\nПроектная деятельность:\n\nспособность проводить обследование организаций, выявлять информационные потребности пользователей, формировать требования к информационной системе;\nспособность участвовать в разработке, внедрении и адаптации прикладного программное обеспечение;\nспособность проектировать ИС в сфере автоматизации юридической работы;\nспособность формулировать обоснование проектных решений;\nспособность собирать информацию для формализации требований пользователей заказчика;\nспособность проводить описание прикладных процессов и информационного обеспечения решения прикладных задач;\nспособность составлять техническую документацию проектов автоматизации и информатизации прикладных процессов;\nорганизационно-управленческая деятельность:\nспособность принимать участие в управлении проектами создания информационных систем на стадиях жизненного цикла;\nспособность принимать участие в реализации профессиональных коммуникаций в рамках проектных групп, обучать пользователей информационных систем.\n\nАналитическая деятельность:\n\nспособность осуществлять и обосновывать выбор проектных решений по видам обеспечения информационных систем;\nспособность проводить оценку рисков при создании информационных систем;\nспособностью анализировать рынок программно-технических средств, информационных продуктов и услуг для создания и модификации информационных систем.",
    "crumbs": [
      "Главная",
      "О программе"
    ]
  },
  {
    "objectID": "annotation.html#дисциплины-модули",
    "href": "annotation.html#дисциплины-модули",
    "title": "О программе профессиональной подготовки",
    "section": "Дисциплины (модули)",
    "text": "Дисциплины (модули)\nИзучайте актуальные направления, которые помогут стать экспертом в цифровой юриспруденции:\n\nАлгоритмика: Основы программирования, автоматизация рутинных задач и работа с данными.\nАнализ и моделирование бизнес-процессов: Инструменты оптимизации юридических workflows: BPMN, схемы процессов, кейсы.\nУправление ИТ-проектами: Agile, Scrum, RACI-матрицы — управляйте цифровыми решениями уверенно.\nМетодологии разработки ПО: От проектирования до внедрения: жизненный цикл ПО и интеграция в юридическую практику.\nАвтоматизация юридической работы (Legaltech): AI, блокчейн, электронный документооборот — технологии, которые меняют профессию.",
    "crumbs": [
      "Главная",
      "О программе"
    ]
  },
  {
    "objectID": "annotation.html#для-вас-если-вы",
    "href": "annotation.html#для-вас-если-вы",
    "title": "О программе профессиональной подготовки",
    "section": "Для вас, если вы:",
    "text": "Для вас, если вы:\n\nСтудент МГЮА имени О.Е. Кутафина, стремящийся стать востребованным специалистом на стыке права и IT.\nХотите систематизировать знания, получить практические навыки и создать проект для портфолио.",
    "crumbs": [
      "Главная",
      "О программе"
    ]
  },
  {
    "objectID": "annotation.html#почему-стоит-использовать-материалы-сайта",
    "href": "annotation.html#почему-стоит-использовать-материалы-сайта",
    "title": "О программе профессиональной подготовки",
    "section": "Почему стоит использовать материалы сайта?",
    "text": "Почему стоит использовать материалы сайта?\n\nСтруктурированная подача — все лекции, задания и дополнительные ресурсы в одном месте.\nПоддержка на каждом этапе — гайды, шаблоны и примеры упростят подготовку к экзаменам и защите проекта.\nДоступ к экспертизе — материалы подготовлены практикующими юристами и IT-специалистами.\nСертификат «Иннополиса» — дополнительные материалы помогут успешно пройти ассесмент и подтвердить уровень навыков.\n\nВаше обучение — это инвестиция в будущее. Используйте материалы, задавайте вопросы в обсуждениях и достигайте целей! Каждый модуль — шаг к профессии юриста нового поколения.\nОсвойте Legaltech, станьте экспертом в автоматизации права и откройте новые карьерные возможности!",
    "crumbs": [
      "Главная",
      "О программе"
    ]
  },
  {
    "objectID": "attestation/annotation.html",
    "href": "attestation/annotation.html",
    "title": "Аннотация учебной дисциплины",
    "section": "",
    "text": "Итоговая аттестация проходит в виде защиты проекта, подготовленного в рамках модуля Итоговый проект.\nК итоговой аттестации не допускаются слушатели, не достигшие в ходе итогового ассесмента от АНО ВО «Университет Иннополис» целевого уровня развития компетенций (уровень «Базовый»).",
    "crumbs": [
      "Главная",
      "Итоговая аттестация",
      "Аннотация"
    ]
  },
  {
    "objectID": "attestation/annotation.html#критерии-допуска-к-итоговой-аттестации",
    "href": "attestation/annotation.html#критерии-допуска-к-итоговой-аттестации",
    "title": "Аннотация учебной дисциплины",
    "section": "",
    "text": "Итоговая аттестация проходит в виде защиты проекта, подготовленного в рамках модуля Итоговый проект.\nК итоговой аттестации не допускаются слушатели, не достигшие в ходе итогового ассесмента от АНО ВО «Университет Иннополис» целевого уровня развития компетенций (уровень «Базовый»).",
    "crumbs": [
      "Главная",
      "Итоговая аттестация",
      "Аннотация"
    ]
  },
  {
    "objectID": "attestation/annotation.html#содержание-итоговой-аттестации-защиты-проекта",
    "href": "attestation/annotation.html#содержание-итоговой-аттестации-защиты-проекта",
    "title": "Аннотация учебной дисциплины",
    "section": "Содержание итоговой аттестации (защиты проекта)",
    "text": "Содержание итоговой аттестации (защиты проекта)\nИтоговые аттестационные испытания включают следующие оценочные мероприятия:\n\nустная презентация проекта;\nответы на вопросы членов аттестационной комиссии по проекту.",
    "crumbs": [
      "Главная",
      "Итоговая аттестация",
      "Аннотация"
    ]
  },
  {
    "objectID": "attestation/annotation.html#критерии-оценки",
    "href": "attestation/annotation.html#критерии-оценки",
    "title": "Аннотация учебной дисциплины",
    "section": "Критерии оценки",
    "text": "Критерии оценки\n\nКритерии оценки устной презентации:\n\nсамостоятельный проект с анализом проблемы, бизнес-процессов и рисков с самостоятельными выводами и примерами,\nчеткое соблюдение структуры презентации,\nпредставление описания функциональных требований и/или технического задания с учетом требований «заказчика» и пользовательской оптимизации.\n\n\n\nКритерии оценки ответов на вопросы:\n\nлогичность и правильность изложения содержания ответа на вопрос;\nдостаточная аргументация;\nэффективное взаимодействие с членами экзаменационной комиссии.\n\n\n\nКритериями оценки представленной работы\nОсновными критериями оценки выполненной обучающимся и представленной для проверки работы являются:\n\nСтепень соответствия выполненного задания поставленным требованиям.\nСтруктурирование и комментирование практической работы.\nУникальность выполнение работы (отличие от работ коллег).\nУспешные ответы на контрольные вопросы.",
    "crumbs": [
      "Главная",
      "Итоговая аттестация",
      "Аннотация"
    ]
  },
  {
    "objectID": "attestation/annotation.html#результаты-аттестации",
    "href": "attestation/annotation.html#результаты-аттестации",
    "title": "Аннотация учебной дисциплины",
    "section": "Результаты аттестации",
    "text": "Результаты аттестации\n\n«Отлично» — оформление и содержание соответствуют требованиям, критерии выдержаны, проект отвечает требованиям и учитывает риски, защита всего перечня контрольных вопросов.\n«Хорошо» — оформление и содержание соответствуют требованиям, критерии выдержаны, проект отвечает не всем требованиям и учитывает часть рисков, защита только 80 % контрольных вопросов.\n«Удовлетворительно» — оформление и содержание не полностью соответствуют требованиям, критерии выдержаны, проект отвечает не всем требованиям и не учитывает риски, защита только 61 % контрольных вопросов.\n«Неудовлетворительно» — оформление и содержание не соответствуют требованиям; проект не отвечает требованиям и не учитывает риски; защита 60% и менее контрольных вопросов.",
    "crumbs": [
      "Главная",
      "Итоговая аттестация",
      "Аннотация"
    ]
  },
  {
    "objectID": "attestation/index.html",
    "href": "attestation/index.html",
    "title": "Итоговая аттестация",
    "section": "",
    "text": "Аннотация учебного модуля\nПримеры оценочных средств",
    "crumbs": [
      "Главная",
      "Итоговая аттестация"
    ]
  },
  {
    "objectID": "attestation/index.html#содержание-учебного-модуля",
    "href": "attestation/index.html#содержание-учебного-модуля",
    "title": "Итоговая аттестация",
    "section": "",
    "text": "Аннотация учебного модуля\nПримеры оценочных средств",
    "crumbs": [
      "Главная",
      "Итоговая аттестация"
    ]
  },
  {
    "objectID": "bibliography/additional.html",
    "href": "bibliography/additional.html",
    "title": "Дополнительная литература",
    "section": "",
    "text": "1. Управление бизнес-процессами предприятия под ред. Е. В. Пирогова, Ульяновск: УлГТУ, 2017.\n\n\n2. Современное юридическое образование: традиции и инновации Университета имени О. Е. Кутафина (МГЮА) под ред. В. В. Блажеев, М. В. Мажорина, Москва: Норма : ИНФРА-М, 2022.\n\n\n3. Бабенко М. А., Левин М. В. Введение в теорию алгоритмов и структур данных / М. А. Бабенко, М. В. Левин, МЦНМО, 2017.\n\n\n4. Бхаргава А. Грокаем алгоритмы: Иллюстрированное пособие для программистов и любопытствующих / А. Бхаргава, СПб.: Питер, 2019.\n\n\n5. Дасгупта С., Пападимитриу Х., Вазирани У. Алгоритмы / С. Дасгупта, Х. Пападимитриу, У. Вазирани, под ред. А. Шеня, перевод Пер. с англ., М.: МЦНМО, 2014.\n\n\n6. Дерби Э. Agile ретроспектива: как превратить хорошую команду в великую / Э. Дерби, М.: Издательство Дмитрия Лазарева, 2017.\n\n\n7. Зараменских Е. П. Управление жизненным циклом информационных систем: Учебник и практикум для академического бакалавриата / Е. П. Зараменских, М.: Издательство Юрайт, 2019.\n\n\n8. Маглинец Ю. А. Анализ требований к автоматизированным информационным системам: учеб. пособие / Ю. А. Маглинец, М.:, 2008.\n\n\n9. Макконнел Дж. Основы современных алгоритмов / Дж. Макконнел, М.: Техносфера, 2006.\n\n\n10. Полежаев О. А. Право новых технологий, практика комплексной юридической проверки (due diligence) при подготовке сделок в сфере новых технологий, новые технологии автоматизации юридической работы (LegalTech) / О. А. Полежаев, под ред. Л. А. Новосёлова, М.: Проспект, 2021.\n\n\n11. Рожкова М. А. О правовых аспектах использования технологий: LegalTech и LawTech // Хозяйство и право. 2020. № 3. C. 3–11.\n\n\n12. Удальцова Н. Л. Современные методы анализа и моделирования бизнес-процессов // Лидерство и менеджмент. 2021. № 2 (8). C. 185–200.\n\n\n13. Седжвик Р. Фундаментальные алгоритмы на С Ч. 5 / Р. Седжвик, М. [и др.]: DiaSoft, 2003.\n\n\n14. Друкер П. Классические работы по менеджменту / П. Друкер, Альпина Паблишер, 2015.",
    "crumbs": [
      "Главная",
      "Литература",
      "Дополнительная литература"
    ]
  },
  {
    "objectID": "bibliography/electronic.html",
    "href": "bibliography/electronic.html",
    "title": "Электронные ресурсы",
    "section": "",
    "text": "1. AnalytikaPlus Моделирование и анализ бизнес-процессов [Электронный ресурс]. URL: https://analytikaplus.ru/modelirovanie-i-analiz-biznes-processov/ (дата обращения: 01.09.2024).\n\n\n2. KPMS Автоматизация бизнес-процессов (BPM) [Электронный ресурс]. URL: https://www.kpms.ru/Automatization/BPM.htm (дата обращения: 01.09.2024).\n\n\n3. Platforma Online Каталог LegalTech решений [Электронный ресурс]. URL: https://platforma-online.ru/legaltech-catalog/ (дата обращения: 01.09.2024).\n\n\n4. SK LegalTech SK LegalTech [Электронный ресурс]. URL: https://sklegaltech.com/ (дата обращения: 01.09.2024).\n\n\n5. НАФИ LegalTech 3.0: рынок LegalTech в России и в мире [Электронный ресурс]. URL: https://nafi.ru/projects/predprinimatelstvo/legaltech-3-0-rynok-legaltech-v-rossii-i-v-mire/ (дата обращения: 01.09.2024).\n\n\n6. Garant.ru LegalTech [Электронный ресурс]. URL: https://legaltech.garant.ru/ (дата обращения: 01.09.2024).",
    "crumbs": [
      "Главная",
      "Литература",
      "Электронные ресурсы"
    ]
  },
  {
    "objectID": "business-process-modeling/exam.html",
    "href": "business-process-modeling/exam.html",
    "title": "Экзамен",
    "section": "",
    "text": "Цели и задачи управления бизнес-процессами\nОпределение бизнес-процесса\nПонятие кросс-функционального и «сквозного» бизнес-процесса\nГоризонтальное взаимодействие функциональных подразделений\nBPM CBOK Version 3.0\nРеферентные модели бизнес-процессов: eTOM, APQC PCF, BIAN\nФорматы описания бизнес-процессов: текстовый, табличный, графической\nНотации моделирования бизнес-процессов (BPMN, EPC, SIPOC и другие)\nМоделирование бизнес-процессов в нотации BPMN\nСредства моделирования бизнес-процессов\nПонятие систем Business Process Management Suite. Примеры автоматизации бизнес-процессов с использованием BPMS систем\nТренды автоматизации бизнес-процессов системы ACM (adaptive case management) и RPA (robotic process automation)\nАнализ времени выполнения бизнес-процессов\nАнализ «бутылочного горлышка» /узких мест\nИмитационное моделирование\nПоказатели анализа бизнес-процессов\nМетоды оптимизации бизнес-процессов: вариативность бизнес-процесса, горизонтальное и вертикальное сжатие бизнес-процессов\nТехнология оптимизации бизнес-процессов\nИнновации при оптимизации бизнес-процессов (нейронные сети, цифровизация и роботизация).",
    "crumbs": [
      "Главная",
      "Анализ и моделирование бизнес-процессов",
      "Экзамен"
    ]
  },
  {
    "objectID": "business-process-modeling/exam.html#темы-для-подготовки-к-экзамену",
    "href": "business-process-modeling/exam.html#темы-для-подготовки-к-экзамену",
    "title": "Экзамен",
    "section": "",
    "text": "Цели и задачи управления бизнес-процессами\nОпределение бизнес-процесса\nПонятие кросс-функционального и «сквозного» бизнес-процесса\nГоризонтальное взаимодействие функциональных подразделений\nBPM CBOK Version 3.0\nРеферентные модели бизнес-процессов: eTOM, APQC PCF, BIAN\nФорматы описания бизнес-процессов: текстовый, табличный, графической\nНотации моделирования бизнес-процессов (BPMN, EPC, SIPOC и другие)\nМоделирование бизнес-процессов в нотации BPMN\nСредства моделирования бизнес-процессов\nПонятие систем Business Process Management Suite. Примеры автоматизации бизнес-процессов с использованием BPMS систем\nТренды автоматизации бизнес-процессов системы ACM (adaptive case management) и RPA (robotic process automation)\nАнализ времени выполнения бизнес-процессов\nАнализ «бутылочного горлышка» /узких мест\nИмитационное моделирование\nПоказатели анализа бизнес-процессов\nМетоды оптимизации бизнес-процессов: вариативность бизнес-процесса, горизонтальное и вертикальное сжатие бизнес-процессов\nТехнология оптимизации бизнес-процессов\nИнновации при оптимизации бизнес-процессов (нейронные сети, цифровизация и роботизация).",
    "crumbs": [
      "Главная",
      "Анализ и моделирование бизнес-процессов",
      "Экзамен"
    ]
  },
  {
    "objectID": "it-project-management/index.html",
    "href": "it-project-management/index.html",
    "title": "Управление ИТ-проектами",
    "section": "",
    "text": "Аннотация учебной дисциплины\nТема 1. Основные положения и общая характеристика управления ИТ-проектами.\nТема 2. Организация управления IИ-проектом.\nТема 3. Методы и модели управления разработкой программных средств ИТ-проекта.\nТема 4. Команда разработки программного обеспечения. Роли и задачи команды.\nТемы для подготовки к зачету\nТесты для подготовки к ассесменту",
    "crumbs": [
      "Главная",
      "Управление ИТ-проектами"
    ]
  },
  {
    "objectID": "it-project-management/index.html#содержание-учебного-модуля",
    "href": "it-project-management/index.html#содержание-учебного-модуля",
    "title": "Управление ИТ-проектами",
    "section": "",
    "text": "Аннотация учебной дисциплины\nТема 1. Основные положения и общая характеристика управления ИТ-проектами.\nТема 2. Организация управления IИ-проектом.\nТема 3. Методы и модели управления разработкой программных средств ИТ-проекта.\nТема 4. Команда разработки программного обеспечения. Роли и задачи команды.\nТемы для подготовки к зачету\nТесты для подготовки к ассесменту",
    "crumbs": [
      "Главная",
      "Управление ИТ-проектами"
    ]
  },
  {
    "objectID": "legaltech/index.html",
    "href": "legaltech/index.html",
    "title": "Автоматизация юридической работы (Legaltech)",
    "section": "",
    "text": "Аннотация учебной дисциплины \nТема 1. Понятие Legaltech. Виды ПО, автоматизирующего юридические процессы. Понятие внутреннего продукта автоматизации и внешних сервисов автоматизации юридических процессов.\nТема 2. Применение различных технологий при автоматизации юридических процессов: blockchain, машинное обучение и искусственный интеллект, облачные данные и вычисления и др.\nТема 3. Анализ рынка автоматизации: отдельные технологии и системы в составе информационно-технологического обеспечения юридической деятельности. Российский рынок Legaltech.\nТема 4. Цифровизация управления интеллектуальной собственностью.\nТемы для подготовки к зачету\nТесты для подготовки к ассесменту",
    "crumbs": [
      "Главная",
      "Автоматизация юридической работы (Legaltech)"
    ]
  },
  {
    "objectID": "legaltech/index.html#содержание-учебного-модуля",
    "href": "legaltech/index.html#содержание-учебного-модуля",
    "title": "Автоматизация юридической работы (Legaltech)",
    "section": "",
    "text": "Аннотация учебной дисциплины \nТема 1. Понятие Legaltech. Виды ПО, автоматизирующего юридические процессы. Понятие внутреннего продукта автоматизации и внешних сервисов автоматизации юридических процессов.\nТема 2. Применение различных технологий при автоматизации юридических процессов: blockchain, машинное обучение и искусственный интеллект, облачные данные и вычисления и др.\nТема 3. Анализ рынка автоматизации: отдельные технологии и системы в составе информационно-технологического обеспечения юридической деятельности. Российский рынок Legaltech.\nТема 4. Цифровизация управления интеллектуальной собственностью.\nТемы для подготовки к зачету\nТесты для подготовки к ассесменту",
    "crumbs": [
      "Главная",
      "Автоматизация юридической работы (Legaltech)"
    ]
  },
  {
    "objectID": "project/index.html",
    "href": "project/index.html",
    "title": "Итоговый проект по проекту",
    "section": "",
    "text": "Аннотация учебного модуля\nТребования к отчету по проекту\nСтруктура отчета по проекту\nПримерные темы проектов",
    "crumbs": [
      "Главная",
      "Итоговый проект"
    ]
  },
  {
    "objectID": "project/index.html#содержание-учебного-модуля",
    "href": "project/index.html#содержание-учебного-модуля",
    "title": "Итоговый проект по проекту",
    "section": "",
    "text": "Аннотация учебного модуля\nТребования к отчету по проекту\nСтруктура отчета по проекту\nПримерные темы проектов",
    "crumbs": [
      "Главная",
      "Итоговый проект"
    ]
  },
  {
    "objectID": "project/report-structure.html",
    "href": "project/report-structure.html",
    "title": "Примерная структура отчета по проекту",
    "section": "",
    "text": "Актуальность проекта.\nОбъект и предмет автоматизации.\nЦель и задачи проекта.\nПрактическая значимость проекта",
    "crumbs": [
      "Главная",
      "Итоговый проект",
      "Структура отчета"
    ]
  },
  {
    "objectID": "project/report-structure.html#введение",
    "href": "project/report-structure.html#введение",
    "title": "Примерная структура отчета по проекту",
    "section": "",
    "text": "Актуальность проекта.\nОбъект и предмет автоматизации.\nЦель и задачи проекта.\nПрактическая значимость проекта",
    "crumbs": [
      "Главная",
      "Итоговый проект",
      "Структура отчета"
    ]
  },
  {
    "objectID": "project/report-structure.html#раздел-1.",
    "href": "project/report-structure.html#раздел-1.",
    "title": "Примерная структура отчета по проекту",
    "section": "Раздел 1.",
    "text": "Раздел 1.\nОписание организации, являющейся объектом автоматизации (Технико-экономическая характеристика объекта автоматизации)\n\nПодраздел 1.1.\nЭкономический анализ деятельности организации (миссия организации, система целей и ключевых показателей эффективности, стратегия развития и бизнес-архитектура предприятия).\n\n\nПодраздел 1.2.\nОрганизационная структура и система управления.\n\n\nПодраздел 1.3.\nСостояние ИТ в организации (степень автоматизации процессов, покрытие функциональных областей).",
    "crumbs": [
      "Главная",
      "Итоговый проект",
      "Структура отчета"
    ]
  },
  {
    "objectID": "project/report-structure.html#раздел-2.",
    "href": "project/report-structure.html#раздел-2.",
    "title": "Примерная структура отчета по проекту",
    "section": "Раздел 2.",
    "text": "Раздел 2.\nАнализ существующей организации бизнес и информационных процессов\n\nПодраздел 2.1.\nОписание существующей организации бизнес и информационных процессов (приветствуется построение модели бизнес-процесса «as-is» с использованием любой из нотаций IDEF0, BPMN, eEPC/EPC и др.).\n\n\nПодраздел 2.2.\nАнализ недостатков (проблем, узких мест) существующей организации бизнес и информационных процессов.\n\n\nПодраздел 2.3.\nФормирование предложений по автоматизации (информатизации) бизнес и информационных процессов.\nПредложения формируются с учетом:\n\nанализа успешных IТ-проектов в рассматриваемой области;\nанализа рынка программного обеспечения и IТ-технологий.",
    "crumbs": [
      "Главная",
      "Итоговый проект",
      "Структура отчета"
    ]
  },
  {
    "objectID": "project/report-structure.html#раздел-3.",
    "href": "project/report-structure.html#раздел-3.",
    "title": "Примерная структура отчета по проекту",
    "section": "Раздел 3.",
    "text": "Раздел 3.\nПостановка задачи автоматизации (информатизации) бизнес и информационных процессов (решения задач, комплекса задач, подсистем)\n\nПодраздел 3.1.\nЦели и задачи проекта автоматизации (информатизации) бизнес и информационных процессов. Сущность разрабатываемого комплекса задач (программы, программного модуля, информационной системы).\n\n\nПодраздел 3.2.\nПостроение и обоснование модели новой организации бизнес и информационных процессов (построить модель бизнес-процесса «to-be» с использованием любой из нотаций IDEF0, BPMN, eEPC/EPC и др.).\n\n\nПодраздел 3.3.\nФункциональные требования к информационной системе. Составляются в виде таблицы, в которой для каждой автоматизируемой функции необходимо описать входные и выходные информационные потоки, участников и регламент выполнения).",
    "crumbs": [
      "Главная",
      "Итоговый проект",
      "Структура отчета"
    ]
  },
  {
    "objectID": "project/report-structure.html#раздел-4.",
    "href": "project/report-structure.html#раздел-4.",
    "title": "Примерная структура отчета по проекту",
    "section": "Раздел 4.",
    "text": "Раздел 4.\nКалендарно-ресурсное планирование проекта, анализ рисков\n\nПодраздел 4.1.\nОбоснование выбора модели жизненного цикла и подхода к разработке ИС/ПО:\n\nмодели ЖЦ ИС/ПО - каскадная, инкрементная, итеративная, спиральная;\nподходы к разработке ИС/ПО: предиктивный подход, адаптивный подход, гибридный подход\n\n\n\nПодраздел 4.2.\nКалендарный план-график работ по проекту на разработку ИС/ПО Календарный план-график работ по проекту на разработку ИС/ПО может быть представлен в виде таблицы с указанием состава и трудоемкости выполнения работ на всех стадиях проекта, а также исполнителей и ответственных за выполнение каждого вида работ. Приветствуется дополнительное графическое отображение план-графика в форме диаграммы Ганта. Для построения диаграммы Ганта можно использовать шаблоны Excel.\n\n\nПодраздел 4.3.\nАнализ рисков на разработку и внедрение ИС/ПО и меры по их устранению.\nОписание возможных рисков реализации проекта, обусловленных как внутренними, так и внешними причинами. Описание мероприятий по устранению рисков.",
    "crumbs": [
      "Главная",
      "Итоговый проект",
      "Структура отчета"
    ]
  },
  {
    "objectID": "project/report-structure.html#раздел-5.",
    "href": "project/report-structure.html#раздел-5.",
    "title": "Примерная структура отчета по проекту",
    "section": "Раздел 5.",
    "text": "Раздел 5.\nАнализ качественных и количественных факторов воздействия проекта на бизнес-архитектуру организации (экономический, эргономический, социальный и др. эффекты)\nКачественные и количественные показатели проекта (KPI) (пользовательские требования к быстродействию, надежности, эргономике системы, информационной безопасности и др.).",
    "crumbs": [
      "Главная",
      "Итоговый проект",
      "Структура отчета"
    ]
  },
  {
    "objectID": "project/report-structure.html#заключение",
    "href": "project/report-structure.html#заключение",
    "title": "Примерная структура отчета по проекту",
    "section": "Заключение",
    "text": "Заключение\n\nКонстатация выполнения задач и достижения цели проекта с указанием полученных результатов.\nПеречисление проблем, не решенных в рамках проекта, на которые автор предполагает направить дальнейшую деятельность.",
    "crumbs": [
      "Главная",
      "Итоговый проект",
      "Структура отчета"
    ]
  },
  {
    "objectID": "project/report-structure.html#список-используемой-литературы",
    "href": "project/report-structure.html#список-используемой-литературы",
    "title": "Примерная структура отчета по проекту",
    "section": "Список используемой литературы",
    "text": "Список используемой литературы\n\nСписок законодательных и нормативных документов\nСписок литературных и журнальных источников в алфавитном порядке\nСписок интернет-источников",
    "crumbs": [
      "Главная",
      "Итоговый проект",
      "Структура отчета"
    ]
  },
  {
    "objectID": "project/report-structure.html#состав-исполнителей",
    "href": "project/report-structure.html#состав-исполнителей",
    "title": "Примерная структура отчета по проекту",
    "section": "Состав исполнителей",
    "text": "Состав исполнителей",
    "crumbs": [
      "Главная",
      "Итоговый проект",
      "Структура отчета"
    ]
  },
  {
    "objectID": "project/report-structure.html#приложения",
    "href": "project/report-structure.html#приложения",
    "title": "Примерная структура отчета по проекту",
    "section": "Приложения",
    "text": "Приложения\nРаспечатки моделей, схем, таблиц и др.",
    "crumbs": [
      "Главная",
      "Итоговый проект",
      "Структура отчета"
    ]
  },
  {
    "objectID": "software-development-methodology/annotation.html",
    "href": "software-development-methodology/annotation.html",
    "title": "Аннотация учебной дисциплины",
    "section": "",
    "text": "формирование у обучающихся представления об организации процесса разработки ПО. По итогу обучающиеся должны понимать, какие влияние оказывает принятая методология разработки на процессы проектирования и разработки программного обеспечения, а также на управление командой разработки.",
    "crumbs": [
      "Главная",
      "Методологии разработки программного обеспечения",
      "Аннотация"
    ]
  },
  {
    "objectID": "software-development-methodology/annotation.html#цель-реализации-программы-дисциплины",
    "href": "software-development-methodology/annotation.html#цель-реализации-программы-дисциплины",
    "title": "Аннотация учебной дисциплины",
    "section": "",
    "text": "формирование у обучающихся представления об организации процесса разработки ПО. По итогу обучающиеся должны понимать, какие влияние оказывает принятая методология разработки на процессы проектирования и разработки программного обеспечения, а также на управление командой разработки.",
    "crumbs": [
      "Главная",
      "Методологии разработки программного обеспечения",
      "Аннотация"
    ]
  },
  {
    "objectID": "software-development-methodology/annotation.html#планируемые-результаты-обучения",
    "href": "software-development-methodology/annotation.html#планируемые-результаты-обучения",
    "title": "Аннотация учебной дисциплины",
    "section": "Планируемые результаты обучения:",
    "text": "Планируемые результаты обучения:\nПо итогам освоения дисциплины (модуля) обучающийся приобретает способности:\n\nописывает особенности жизненного цикла разработки ПО;\nзнает и понимает, что такое методологии разработки ПО;\nпонимает, как учитывать различные факторы проекта (внутренние и внешние) при выборе методологии разработки ПО;\nпонимает, какие факторы могут иметь влияние на выбор методологии разработки ПО;\nзнает и понимает базовые понятия области анализа требований;\nвыявляет и анализирует требования, управляет ими;\nуправляет изменениями требований;\nумеет формировать техническое задание;\nзнает базовые архитектурные паттерны клиентских и серверных приложений;\nзнает и понимает основные разделы технического задания;\nзнает и понимает различные модели разработки и их особенности.",
    "crumbs": [
      "Главная",
      "Методологии разработки программного обеспечения",
      "Аннотация"
    ]
  },
  {
    "objectID": "software-development-methodology/annotation.html#оценка-качества-освоения-дисциплины",
    "href": "software-development-methodology/annotation.html#оценка-качества-освоения-дисциплины",
    "title": "Аннотация учебной дисциплины",
    "section": "Оценка качества освоения дисциплины",
    "text": "Оценка качества освоения дисциплины\nОценка качества освоения программы по дисциплине «Методология разработки программного обеспечения» подразумевает три формы: текущий контроль, рубежный контроль и промежуточный контроль успеваемости.\nТекущий контроль заключается в проверке домашних заданий, выполняемых слушателями к каждому практическому занятию.\nРубежный контроль проводится в течение семестра в форме письменного теста или электронного тестирования.\nПромежуточный контроль успеваемости по дисциплине проводится на зачете. Для успешной сдачи зачета слушателю необходимо ответить на вопросы билета.",
    "crumbs": [
      "Главная",
      "Методологии разработки программного обеспечения",
      "Аннотация"
    ]
  },
  {
    "objectID": "software-development-methodology/credit.html",
    "href": "software-development-methodology/credit.html",
    "title": "Зачет",
    "section": "",
    "text": "Понятие о методологиях разработки.\nРазные модели разработки: каскадная модель, V-модель, инкрементная и итерационная модели и др.\nВыбор методологии для реального проекта\nРоли в команде разработки. Влияние методологии на роли в команде.\nВиды и назначения языков программирования.\nПонятие программного обеспечения. Типы и назначения ПО.\nПонятие «требования» с точки зрения составления описания функциональных требований и технических заданий. Типы требований.\nВыявление функциональных и нефункциональных требований.\nСоставление описания функциональных требований.\nСтандарты в области составления технического задания.\nТехническое задание: требования, содержание.",
    "crumbs": [
      "Главная",
      "Методологии разработки программного обеспечения",
      "Зачет"
    ]
  },
  {
    "objectID": "software-development-methodology/credit.html#темы-для-подготовки-к-зачету",
    "href": "software-development-methodology/credit.html#темы-для-подготовки-к-зачету",
    "title": "Зачет",
    "section": "",
    "text": "Понятие о методологиях разработки.\nРазные модели разработки: каскадная модель, V-модель, инкрементная и итерационная модели и др.\nВыбор методологии для реального проекта\nРоли в команде разработки. Влияние методологии на роли в команде.\nВиды и назначения языков программирования.\nПонятие программного обеспечения. Типы и назначения ПО.\nПонятие «требования» с точки зрения составления описания функциональных требований и технических заданий. Типы требований.\nВыявление функциональных и нефункциональных требований.\nСоставление описания функциональных требований.\nСтандарты в области составления технического задания.\nТехническое задание: требования, содержание.",
    "crumbs": [
      "Главная",
      "Методологии разработки программного обеспечения",
      "Зачет"
    ]
  },
  {
    "objectID": "subjects.html",
    "href": "subjects.html",
    "title": "Модули (дисциплины) программы",
    "section": "",
    "text": "Алгоритмика: Основы программирования, автоматизация рутинных задач и работа с данными.\nАнализ и моделирование бизнес-процессов: Инструменты оптимизации юридических workflows: BPMN, схемы процессов, кейсы.\nУправление ИТ-проектами: Agile, Scrum, RACI-матрицы — управляйте цифровыми решениями уверенно.\nМетодологии разработки ПО: От проектирования до внедрения: жизненный цикл ПО и интеграция в юридическую практику.\nАвтоматизация юридической работы (Legaltech): AI, блокчейн, электронный документооборот — технологии, которые меняют профессию."
  },
  {
    "objectID": "traineeship/credit.html",
    "href": "traineeship/credit.html",
    "title": "Отчет по стажировке",
    "section": "",
    "text": "По итогу прохождения стажировки студентами формируется отчет команды о прохождении стажировки.\nВ ходе защиты отчета о стажировке студенты должны продемонстрировать:\n\nЗнание актуальных направлений развития сферы Legaltech и понимание роли и значения для сферы продуктов компании, в которой группа проходила стажировку.\nРассказать, а по возможности продемонстрировать приобретенные профессиональные практические навыки.\nПродемонстрировать выполнения заданий, полученных в ходе стажировки.\nОценить вклад стажировки в работу над итоговым проектом.\n\nВ ходе защиты отчета руководитель стажировки оценивает логичность изложения отчёта, полноту описания содержания стажировки и итогов её прохождения, соответствие оформления требованиям (шрифт, поля, интервал, ссылки на использованные источники).",
    "crumbs": [
      "Главная",
      "Стажировка",
      "Отчет по стажировке"
    ]
  },
  {
    "objectID": "traineeship/credit.html#защита-отчета",
    "href": "traineeship/credit.html#защита-отчета",
    "title": "Отчет по стажировке",
    "section": "",
    "text": "По итогу прохождения стажировки студентами формируется отчет команды о прохождении стажировки.\nВ ходе защиты отчета о стажировке студенты должны продемонстрировать:\n\nЗнание актуальных направлений развития сферы Legaltech и понимание роли и значения для сферы продуктов компании, в которой группа проходила стажировку.\nРассказать, а по возможности продемонстрировать приобретенные профессиональные практические навыки.\nПродемонстрировать выполнения заданий, полученных в ходе стажировки.\nОценить вклад стажировки в работу над итоговым проектом.\n\nВ ходе защиты отчета руководитель стажировки оценивает логичность изложения отчёта, полноту описания содержания стажировки и итогов её прохождения, соответствие оформления требованиям (шрифт, поля, интервал, ссылки на использованные источники).",
    "crumbs": [
      "Главная",
      "Стажировка",
      "Отчет по стажировке"
    ]
  },
  {
    "objectID": "traineeship/credit.html#критерии-оценки",
    "href": "traineeship/credit.html#критерии-оценки",
    "title": "Отчет по стажировке",
    "section": "Критерии оценки",
    "text": "Критерии оценки\nПо результатам защиты отчета выставляются отметки по двухбалльной шкале («удовлетворительно» — «зачтено», «неудовлетворительно» — «не зачтено»). При определении оценки промежуточной аттестационной необходимо руководствоваться следующими критериями:\n\n\n\n\n\n\n\n\nУровень усвоения\nКритерии оценивания уровня усвоенных знаний, умений, приобретённых владений\nСистема оценивания\n\n\n\n\nМинимальный уровень не достигнут\nСлушатель ответил правильно на менее 60% предложенных вопросов.\nне зачтено\n\n\nМинимальный уровень достигнут\nСлушатель ответил правильно на 60% вопросов и более.\nзачтено",
    "crumbs": [
      "Главная",
      "Стажировка",
      "Отчет по стажировке"
    ]
  }
]